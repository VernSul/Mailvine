{"ast":null,"code":"import _toConsumableArray from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/victor/Documents/dadTools/emailFinder/src/components/Message.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Switch from \"react-switch\";\n\nvar Message =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Message, _React$Component);\n\n  function Message(props) {\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n    _this.getTemplates =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, templates, key;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios('http://localhost:4000/gettemplate');\n\n            case 2:\n              response = _context.sent;\n              response = response.data.hits.hits;\n              templates = new Map();\n\n              for (key in response) {\n                templates.set(response[key]._id, response[key]._source);\n              }\n\n              _this.setState({\n                templates: templates\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.changeSubject = function (e) {\n      var text = e.target.value;\n\n      var nwSub = _objectSpread({}, _this.state.subject);\n\n      if (_this.state.mode) {\n        nwSub;\n\n        _this.setState({\n          template: text,\n          rendered: text\n        }, function () {\n          return console.log(_this.state);\n        });\n\n        if (_this.props.name) _this.setState({\n          text: _this.loadTemplate(_this.state.template)\n        });\n      } else {\n        _this.setState({\n          rendered: text,\n          text: text\n        });\n      }\n    };\n\n    _this.changeMessage = function (e) {\n      var text = e.target.value;\n\n      if (_this.state.mode) {\n        _this.setState({\n          template: text,\n          rendered: text\n        }, function () {\n          return console.log(_this.state);\n        });\n\n        if (_this.props.name) _this.setState({\n          text: _this.loadTemplate(_this.state.template)\n        });\n      } else {\n        _this.setState({\n          rendered: text,\n          text: text\n        });\n      }\n    };\n\n    _this.upFirst = function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    };\n\n    _this.changeMode = function () {\n      if (!_this.props.name || !_this.state.templateId) return _this.setState({\n        mode: true\n      });\n\n      _this.setState({\n        mode: !_this.state.mode\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!_this.state.mode) {\n                  _this.templateAction('update');\n\n                  _this.getTemplates();\n\n                  _this.setState({\n                    rendered: _this.state.text\n                  }, function () {\n                    console.log(_this.state);\n                  });\n                } else _this.setState({\n                  rendered: _this.state.template\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    };\n\n    _this.placeAttribute = function (e) {\n      if (e.target.value === 'Add attribute') return;\n\n      var textemp = _this.state.template.slice(0);\n\n      var text = document.getElementById('emailEditor');\n      var nwTemp = textemp.split(\"\");\n\n      if (text.selectionStart === text.selectionEnd) {\n        var _nwTemp;\n\n        (_nwTemp = nwTemp).splice.apply(_nwTemp, [text.selectionStart, 0].concat(_toConsumableArray(\"{\" + e.target.value + \"}\".split(''))));\n      } else {\n        var _nwTemp2;\n\n        (_nwTemp2 = nwTemp).splice.apply(_nwTemp2, [text.selectionStart, text.selectionEnd - text.selectionStart].concat(_toConsumableArray(\"{\" + e.target.value + \"}\".split(''))));\n      }\n\n      nwTemp = nwTemp.join(\"\");\n      console.log(nwTemp);\n\n      _this.setState({\n        template: nwTemp,\n        rendered: nwTemp\n      });\n\n      console.log(document.getElementsByTagName('select')[0]);\n      document.getElementsByTagName('select')[0].value = 'Add attribute';\n    };\n\n    _this.sendMessage = function () {\n      var body = \"\";\n\n      for (var h in _this.state.headers) {\n        body += h += \": \" + _this.state.headers[h] + \"\\r\\n\";\n      }\n\n      body += \"\\r\\n\" + _this.state.text;\n      console.log(_this.state.text);\n      console.log(body); //replace(/\\+/g, '-').replace(/\\//g, '_')\n\n      var sendRequest = window.gapi.client.gmail.users.messages.send({\n        'userId': 'me',\n        'resource': {\n          'raw': window.btoa(body)\n        }\n      });\n      return sendRequest.execute(function (a) {\n        console.log(a);\n      }, function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.templateAction =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(action) {\n        var del, upd;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(action);\n                _context4.t0 = action;\n                _context4.next = _context4.t0 === \"save\" ? 4 : _context4.t0 === \"delete\" ? 6 : _context4.t0 === \"update\" ? 11 : _context4.t0 === \"new\" ? 16 : 18;\n                break;\n\n              case 4:\n                axios.post('http://localhost:4000/recordtemplate', {\n                  name: document.getElementById(\"templateName\").value,\n                  subject: _this.state.headers.subject,\n                  text: _this.state.template\n                }).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref4 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(resp) {\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            console.log(resp);\n\n                            _this.setState({\n                              newTemplate: false,\n                              templateId: document.getElementById(\"templateName\").value\n                            });\n\n                            _this.getTemplates();\n\n                          case 3:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x2) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n                return _context4.abrupt(\"break\", 18);\n\n              case 6:\n                _context4.next = 8;\n                return axios.post(\"http://localhost:4000/deletetemplate\", {\n                  name: _this.state.templateId\n                });\n\n              case 8:\n                del = _context4.sent;\n                console.log(del);\n                return _context4.abrupt(\"break\", 18);\n\n              case 11:\n                _context4.next = 13;\n                return axios.post('http://localhost:4000/updatetemplate', {\n                  name: _this.state.templateId,\n                  subject: _this.state.headers.subject,\n                  text: _this.state.template\n                });\n\n              case 13:\n                upd = _context4.sent;\n                console.log(upd);\n                return _context4.abrupt(\"break\", 18);\n\n              case 16:\n                if (_this.state.templateId) _this.templateAction(\"update\");\n\n                _this.setState({\n                  template: \"\",\n                  text: \"\",\n                  templateId: false,\n                  newTemplate: true\n                });\n\n              case 18:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.selectTemplate = function (id) {\n      if (id === 'Add template') return;\n\n      _this.setState({\n        templateId: id\n      }, function () {\n        var template;\n\n        if (_this.state.mode) {\n          template = _this.state.templates.get(_this.state.templateId);\n\n          var nwSubj = _objectSpread({}, _this.state.subject);\n\n          nwSubj.rendered = nwSubj.template = template.subject;\n\n          _this.setState({\n            template: template.text,\n            rendered: template.text,\n            subject: nwSubj\n          }, function () {\n            if (_this.props.name) {\n              var _nwSubj = _objectSpread({}, _this.state.subject);\n\n              _nwSubj.message = _this.loadTemplate(template.subject);\n\n              _this.setState({\n                text: _this.loadTemplate(_this.state.template),\n                subject: _nwSubj\n              });\n            }\n          });\n        } else {\n          template = _this.state.templates.get(_this.state.templateId);\n\n          var _nwSubj2 = _objectSpread({}, _this.state.subject);\n\n          _nwSubj2.rendered = _nwSubj2.message = _this.loadTemplate(template.subject);\n          _nwSubj2.rendered = template.subject;\n\n          _this.setState({\n            template: template.text,\n            text: _this.loadTemplate(_this.state.template),\n            rendered: _this.loadTemplate(_this.state.template)\n          });\n        }\n      });\n    };\n\n    _this.loadTemplate = function (temp) {\n      var text = temp.split('');\n\n      var first = _this.upFirst(_this.props.name.first);\n\n      var last = _this.upFirst(_this.props.name.last);\n\n      var company = _this.upFirst(_this.props.name.domain.split('.')[0]);\n\n      for (var i = 0; i < text.length - 1; i++) {\n        if (text[i] === '{') {\n          var j = i;\n\n          while (text[j] !== \"}\") {\n            j = j + 1;\n          }\n\n          var word = text.slice(i + 1, j).join('');\n          var repwr = void 0;\n\n          switch (word) {\n            case \"FullName\":\n              repwr = first + \" \" + last;\n              break;\n\n            case \"FirstName\":\n              repwr = first;\n              console.log(text[i], first);\n              break;\n\n            case \"LastName\":\n              repwr = last;\n              break;\n\n            case \"Company\":\n              repwr = company;\n              break;\n          }\n\n          text.splice(i, j - i + 1, repwr);\n        }\n      }\n\n      return text.join(''); // this.setState( {text, rendered: text} );\n    };\n\n    _this.state = {\n      headers: {\n        from: \"vicfaucon@gmail.com\",\n        to: \"vicfaucon@gmail.com\",\n        subject: \"Full Stack Engineer position at \"\n      },\n      text: '',\n      templates: new Map(),\n      rendered: '',\n      template: '',\n      mode: false,\n      newTemplate: false,\n      subject: {\n        temp: '',\n        message: '',\n        rendered: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.getTemplates();\n                this.changeMode();\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var templates = [];\n      this.state.templates.forEach(function (x, i) {\n        if (x) templates.push(React.createElement(\"option\", {\n          key: i,\n          value: x.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, x.name));\n      });\n      var tempSet = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onClick: this.placeAttribute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Add attribute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Add attribute\"), React.createElement(\"option\", {\n        value: \"FullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"option\", {\n        value: \"FirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"option\", {\n        value: \"LastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"option\", {\n        value: \"Company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Company\")));\n      return React.createElement(\"div\", {\n        className: \"Message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EmailForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"to\",\n        placeholder: \"To\",\n        value: this.props.selAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"subject\",\n        placeholder: \"Subject\",\n        value: this.state.subject.rendered,\n        onChange: this.changeSubject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"setting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, this.state.newTemplate ? React.createElement(\"input\", {\n        id: \"templateName\",\n        placeholder: \"Name the new template\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }) : null, this.state.mode ? tempSet : null, React.createElement(Switch, {\n        className: \"Switch\",\n        onChange: this.changeMode,\n        checked: this.state.mode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), this.state.newTemplate ? null : React.createElement(\"select\", {\n        id: \"templatesName\",\n        onClick: function onClick(e) {\n          return _this2.selectTemplate(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Add template\"), templates)), React.createElement(\"textarea\", {\n        id: \"emailEditor\",\n        placeholder: \"Type your email\",\n        onChange: this.changeMessage,\n        onClick: this.getCursPos,\n        value: this.state.rendered,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), this.state.mode ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"delete\",\n        onClick: function onClick(e) {\n          return _this2.templateAction(e.target.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        id: \"update\",\n        onClick: function onClick(e) {\n          return _this2.templateAction(e.target.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Update\")) : React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Send\"), this.state.newTemplate ? React.createElement(\"button\", {\n        id: \"save\",\n        onClick: function onClick(e) {\n          return _this2.templateAction(e.target.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Save\") : React.createElement(\"button\", {\n        id: \"new\",\n        onClick: function onClick(e) {\n          return _this2.templateAction(e.target.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"New\")));\n    }\n  }]);\n\n  return Message;\n}(React.Component);\n\nexport default Message;","map":{"version":3,"sources":["/home/victor/Documents/dadTools/emailFinder/src/components/Message.js"],"names":["React","axios","Switch","Message","props","getTemplates","response","data","hits","templates","Map","key","set","_id","_source","setState","changeSubject","e","text","target","value","nwSub","state","subject","mode","template","rendered","console","log","name","loadTemplate","changeMessage","upFirst","word","charAt","toUpperCase","slice","changeMode","templateId","templateAction","placeAttribute","textemp","document","getElementById","nwTemp","split","selectionStart","selectionEnd","splice","join","getElementsByTagName","sendMessage","body","h","headers","sendRequest","window","gapi","client","gmail","users","messages","send","btoa","execute","a","error","action","post","then","resp","newTemplate","del","upd","selectTemplate","id","get","nwSubj","message","temp","first","last","company","domain","i","length","j","repwr","from","to","forEach","x","push","tempSet","selAdd","getCursPos","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Switch from \"react-switch\";\n\nclass Message extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            headers: {\n                from:\"vicfaucon@gmail.com\",\n                to:\"vicfaucon@gmail.com\",\n                subject: \"Full Stack Engineer position at \"\n            },\n            text: '',\n            templates: new Map(),\n            rendered: '',\n            template: '',\n            mode: false,\n            newTemplate: false,\n            subject: {temp:'', message: '', rendered: ''}\n        }\n    }\n\n    async componentDidMount(){\n        this.getTemplates();\n        this.changeMode();\n    }\n\n    getTemplates = async () => {\n        let response = await axios('http://localhost:4000/gettemplate');\n        response = response.data.hits.hits;\n\n        let templates = new Map();\n        for(let key in response){\n            templates.set(response[key]._id, response[key]._source);\n        }\n        this.setState( { templates } );\n\n    }\n\n    changeSubject = (e) => {\n        let text = e.target.value;\n        let nwSub = {...this.state.subject};\n        if(this.state.mode) {\n            nwSub\n            this.setState( { template: text, rendered: text }, () => console.log(this.state) );\n            if(this.props.name) this.setState( { text: this.loadTemplate(this.state.template) } );\n        } else {\n            this.setState( {rendered: text, text} )\n        }\n    }\n\n    changeMessage = (e) => {\n        let text = e.target.value;\n        if(this.state.mode) {\n            this.setState( { template: text, rendered: text }, () => console.log(this.state) );\n            if(this.props.name) this.setState( { text: this.loadTemplate(this.state.template) } );\n        } else {\n            this.setState( {rendered: text, text} )\n        }\n    }\n\n    upFirst = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n\n    }\n\n    changeMode = () => {\n        if(!this.props.name || !this.state.templateId) return this.setState( {mode: true});\n\n        this.setState( {mode: !this.state.mode }, async () => {\n            if(!this.state.mode){\n                this.templateAction('update');\n                this.getTemplates();\n                this.setState( { rendered: this.state.text }, () => {console.log(this.state)} );\n            } else this.setState( {rendered: this.state.template} )\n    });\n    }\n\n  \n\n    placeAttribute = (e) => {\n\n        if(e.target.value === 'Add attribute') return;\n\n    \n        let textemp = this.state.template.slice(0);\n\n        let text = document.getElementById('emailEditor');\n\n        let nwTemp = textemp.split(\"\")\n\n        if(text.selectionStart === text.selectionEnd){\n            nwTemp.splice(text.selectionStart, 0, ...\"{\"+e.target.value+\"}\".split(''));\n        } else {\n            nwTemp.splice(text.selectionStart, text.selectionEnd - text.selectionStart, ...\"{\"+e.target.value+\"}\".split(''))\n        }\n\n        nwTemp = nwTemp.join(\"\");\n\n        console.log(nwTemp);\n        \n        this.setState( { template: nwTemp, rendered: nwTemp} );\n        console.log(document.getElementsByTagName('select')[0]);\n        document.getElementsByTagName('select')[0].value = 'Add attribute';\n\n    }\n\n    sendMessage = () => {\n        let body = \"\"\n        for(let h in this.state.headers){\n            body += h += \": \" + this.state.headers[h] + \"\\r\\n\"\n        }\n        body += \"\\r\\n\" + this.state.text;\n        console.log(this.state.text);\n\n        console.log(body)\n        //replace(/\\+/g, '-').replace(/\\//g, '_')\n        const sendRequest = window.gapi.client.gmail.users.messages.send({\n            'userId': 'me',\n            'resource': {\n                'raw': window.btoa(body)\n            }\n        })\n\n        return sendRequest.execute((a)=> {console.log(a)}, (error)=>{console.log(error)})\n\n    }\n\n    templateAction = async (action) => {\n        console.log(action);\n        switch(action){\n            case \"save\":\n                axios.post('http://localhost:4000/recordtemplate', {\n                    name: document.getElementById(\"templateName\").value,\n                    subject: this.state.headers.subject,\n                    text: this.state.template\n                }).then(async (resp) => {\n                    console.log(resp);\n                    this.setState({newTemplate: false, templateId:document.getElementById(\"templateName\").value });\n                    this.getTemplates();\n                });\n                break;\n            \n            case \"delete\":\n                let del = await axios.post(\"http://localhost:4000/deletetemplate\", {name: this.state.templateId});\n                console.log(del);\n                break;\n\n            case \"update\":\n                let upd = await axios.post('http://localhost:4000/updatetemplate', {name: this.state.templateId, subject:this.state.headers.subject, text: this.state.template});\n                console.log(upd);\n                break;\n\n            case \"new\":\n                if(this.state.templateId) this.templateAction(\"update\");\n                this.setState({template:\"\", text:\"\", templateId: false, newTemplate: true})\n                \n\n        }\n\n    }\n \n    selectTemplate = (id) => {\n        if(id === 'Add template') return;\n\n\n        this.setState( {templateId: id}, () => {\n            let template;\n\n            if(this.state.mode) {\n                template = this.state.templates.get(this.state.templateId);\n                let nwSubj = {...this.state.subject};\n                nwSubj.rendered = nwSubj.template = template.subject;\n                \n                this.setState( {template:template.text, rendered:template.text, subject:nwSubj}, () => {\n                    if(this.props.name) {\n                        let nwSubj = {...this.state.subject};\n                        nwSubj.message = this.loadTemplate(template.subject);\n                        this.setState( {text: this.loadTemplate(this.state.template), subject: nwSubj } );\n                    }\n                });\n\n     \n            }\n            else {\n                template = this.state.templates.get(this.state.templateId);\n                let nwSubj = {...this.state.subject};\n                nwSubj.rendered = nwSubj.message = this.loadTemplate(template.subject);\n                nwSubj.rendered = template.subject;\n                this.setState( {template:template.text, text: this.loadTemplate(this.state.template), rendered:this.loadTemplate(this.state.template)} )\n            }\n        });\n        \n        \n    }\n    \n    loadTemplate = (temp) => {\n        let text = temp.split('');\n\n\n        let first = this.upFirst(this.props.name.first);\n        let last = this.upFirst(this.props.name.last);\n        let company = this.upFirst(this.props.name.domain.split('.')[0]);\n\n\n        for(let i = 0; i < text.length-1; i++){\n            if(text[i] === '{'){\n                let j = i;\n                while(text[j] !== \"}\"){\n                    j = j + 1;\n                }\n                let word = text.slice(i+1, j).join('');\n                let repwr;\n                switch(word){\n                    case \"FullName\":\n                        repwr = first + \" \" + last;\n                        break;\n                    case \"FirstName\":\n                        repwr = first;\n                        console.log(text[i], first)\n                        break;\n                    case \"LastName\":\n                        repwr = last;\n                        break;\n                    case \"Company\":\n                        repwr = company;\n                        break;\n                }\n                text.splice(i, j-i+1, repwr)\n                \n            }\n            \n        }\n\n        return text.join('');\n\n        // this.setState( {text, rendered: text} );\n\n    }\n\n\n\n    render(){\n\n        let templates = [];\n\n        this.state.templates.forEach((x, i) => {\n            if(x) templates.push(<option key={i} value={x.name}>{x.name}</option>)\n        })\n\n        let tempSet = <span>\n                        <select onClick={this.placeAttribute}>\n                            <option value=\"Add attribute\">Add attribute</option>\n                            <option value=\"FullName\">Full Name</option>\n                            <option value=\"FirstName\">First Name</option>\n                            <option value=\"LastName\">Last Name</option>\n                            <option value=\"Company\">Company</option>\n                        </select>\n                       \n                    </span>\n        \n\n        return(\n            <div className=\"Message\">\n                \n                <div className=\"EmailForm\">\n                    <input id=\"to\" placeholder=\"To\" value={this.props.selAdd}/>\n                    <input  id=\"subject\" placeholder=\"Subject\" value={this.state.subject.rendered} onChange={this.changeSubject}/>\n                    \n                    <div id=\"setting\">\n                        {this.state.newTemplate ?  <input id=\"templateName\" placeholder=\"Name the new template\"/> : null}\n                        {this.state.mode ? tempSet : null}\n                    \n                        <Switch className=\"Switch\" onChange={this.changeMode} checked={this.state.mode} />\n                        {this.state.newTemplate ? null :\n                            <select id=\"templatesName\" onClick={(e) => this.selectTemplate(e.target.value)}>\n                                <option>Add template</option>\n                                {templates}\n                            </select>}\n                    </div>\n\n                    <textarea  id=\"emailEditor\" placeholder=\"Type your email\" onChange={this.changeMessage} onClick={this.getCursPos} value={this.state.rendered}/>\n                    {this.state.mode ? \n                    <span>\n                        <button id=\"delete\" onClick={(e)=>this.templateAction(e.target.id)}>Delete</button>\n                        <button id=\"update\" onClick={(e)=>this.templateAction(e.target.id)}>Update</button>\n                    </span>\n                    : <button onClick={this.sendMessage}>Send</button>}\n                    {this.state.newTemplate ? <button id=\"save\" onClick={(e)=>this.templateAction(e.target.id)}>Save</button> :\n                    <button id=\"new\" onClick={(e)=>this.templateAction(e.target.id)}>New</button>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}