{"ast":null,"code":"import _classCallCheck from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _readOnlyError from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/home/victor/Documents/dadTools/emailFinder/src/App.js\";\nimport React from 'react';\nimport gmailAPI from './google';\nvar gapi = window.gapi;\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      emails: [],\n      CLIENT_ID: '605121789952-64i5u4ggvju6qhlmkrkv71ol78qbk5aa.apps.googleusercontent.com',\n      API_KEY: 'AIzaSyBkrt40jx5wx3PG4S5W9B49Vm02RNh4vt0'\n    };\n    _this.single = _this.single.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.copy = _this.copy.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSigninStatus = _this.updateSigninStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"copy\",\n    value: function copy(e) {\n      var input = document.createElement('input');\n      input.innerText = this.state.emails[e.currentTarget.parentNode.id];\n      console.log(navigator);\n      navigator.clipboard.writeText(this.state.emails[e.currentTarget.parentNode.id]);\n    }\n  }, {\n    key: \"single\",\n    value: function single() {\n      var _this2 = this;\n\n      console.log(window.gapi);\n      fetch(\"http://localhost:4000/single\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first: document.getElementById('firstName').value.toLowerCase(),\n          last: document.getElementById('lastName').value.toLowerCase(),\n          domain: document.getElementById('domain').value.toLowerCase()\n        })\n      }).then(function (data) {\n        console.log(data);\n        return data.json();\n      }).then(function (emails) {\n        _this2.setState({\n          emails: emails\n        });\n      });\n    }\n  }, {\n    key: \"updateSigninStatus\",\n    value: function updateSigninStatus(isSignedIn) {\n      var authorizeButton = document.getElementById('authorize_button');\n      var signoutButton = document.getElementById('signout_button');\n\n      if (isSignedIn) {\n        authorizeButton.style.display = 'none';\n        signoutButton.style.display = 'block'; //   listLabels();\n      } else {\n        authorizeButton.style.display = 'block';\n        signoutButton.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var gmail = new gmailAPI(this.state.API_KEY, this.state.CLIENT_ID);\n      window.gapi.load('client:auth2', gmail.initClient);\n      gapi = (_readOnlyError(\"gapi\"), window.gapi);\n      this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var emails = this.state.emails.map(function (x, i) {\n        return React.createElement(\"li\", {\n          id: i.toString(),\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, x, React.createElement(\"button\", {\n          className: \"far fa-clipboard\",\n          onClick: _this3.copy,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"First Name\", React.createElement(\"input\", {\n        id: \"firstName\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Last Name\", React.createElement(\"input\", {\n        id: \"lastName\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Company's domain\", React.createElement(\"input\", {\n        id: \"domain\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"submit\",\n        onClick: this.single,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"submit\"), React.createElement(\"button\", {\n        id: \"authorize_button\",\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Authorize\"), React.createElement(\"button\", {\n        id: \"signout_button\",\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Sign Out\"), emails);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/victor/Documents/dadTools/emailFinder/src/App.js"],"names":["React","gmailAPI","gapi","window","App","props","state","emails","CLIENT_ID","API_KEY","single","bind","copy","updateSigninStatus","e","input","document","createElement","innerText","currentTarget","parentNode","id","console","log","navigator","clipboard","writeText","fetch","method","headers","body","JSON","stringify","first","getElementById","value","toLowerCase","last","domain","then","data","json","setState","isSignedIn","authorizeButton","signoutButton","style","display","gmail","load","initClient","auth2","getAuthInstance","get","map","x","i","toString","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gmailAPI from './google'\nconst gapi = window.gapi;\n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            emails: [],\n            CLIENT_ID: '605121789952-64i5u4ggvju6qhlmkrkv71ol78qbk5aa.apps.googleusercontent.com',\n            API_KEY: 'AIzaSyBkrt40jx5wx3PG4S5W9B49Vm02RNh4vt0',\n\n        }\n        this.single = this.single.bind(this);\n        this.copy = this.copy.bind(this);\n        this.updateSigninStatus = this.updateSigninStatus.bind(this);\n\n\n    }\n\n    copy(e) {\n        let input = document.createElement('input');\n        input.innerText = this.state.emails[e.currentTarget.parentNode.id]\n        console.log(navigator)\n        navigator.clipboard.writeText(this.state.emails[e.currentTarget.parentNode.id])\n    }\n\n    single() {\n        console.log(window.gapi)\n        fetch(\"http://localhost:4000/single\", { \n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',   \n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({first: document.getElementById('firstName').value.toLowerCase(),\n                                  last: document.getElementById('lastName').value.toLowerCase(),\n                                  domain: document.getElementById('domain').value.toLowerCase() \n                                })\n        }).then(data => {\n            console.log(data);\n            return data.json()})\n        .then(emails => {\n            this.setState( { emails } )\n        })\n    \n    }\n\n    updateSigninStatus(isSignedIn) {\n        var authorizeButton = document.getElementById('authorize_button');\n        var signoutButton = document.getElementById('signout_button');\n        if (isSignedIn) {\n          authorizeButton.style.display = 'none';\n          signoutButton.style.display = 'block';\n        //   listLabels();\n        } else {\n          authorizeButton.style.display = 'block';\n          signoutButton.style.display = 'none';\n        }\n      }\n\n    componentDidMount(){\n        const gmail = new gmailAPI(this.state.API_KEY, this.state.CLIENT_ID);\n        window.gapi.load('client:auth2', gmail.initClient);\n        gapi = window.gapi\n        this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n\n    }\n\n\n\n\n\n\n    render(){\n\n        let emails = this.state.emails.map((x, i) => {\n            return <li id={i.toString()} key={i}>{x}<button className=\"far fa-clipboard\" onClick={this.copy}></button></li>\n        })\n        return (\n            <div className=\"App\">\n                <label>First Name<input id=\"firstName\" type=\"text\"></input></label>\n                <label>Last Name<input id=\"lastName\" type=\"text\"></input></label>\n                <label>Company's domain<input id=\"domain\" type=\"text\"></input></label>\n                <button id=\"submit\" onClick={this.single}>submit</button>\n\n                <button id=\"authorize_button\" style={{display: 'none'}}>Authorize</button>\n                <button id=\"signout_button\" style={{display: 'none'}}>Sign Out</button>\n\n                {/* <button id=\"upload\" onclick={this.upload}>upload</button>\n                <button id=\"test\" onclick={this.test}>test</button> */}\n                {emails}\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}