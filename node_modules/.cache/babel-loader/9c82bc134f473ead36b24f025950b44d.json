{"ast":null,"code":"import _toConsumableArray from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/victor/Documents/dadTools/emailFinder/src/components/Message.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Switch from \"react-switch\";\n\nvar Message =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Message, _React$Component);\n\n  function Message(props) {\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n\n    _this.changeSubject = function (e) {\n      var s = _objectSpread({}, _this.state);\n\n      s.subject = e.target.value;\n\n      _this.setState(s);\n    };\n\n    _this.changeMessage = function (e) {\n      var text = e.target.value;\n\n      if (_this.state.mode) {\n        _this.setState({\n          template: text,\n          rendered: text\n        });\n\n        if (_this.props.name) _this.setState({\n          text: _this.loadTemplate()\n        });\n      } else {\n        _this.setState({\n          rendered: text,\n          text: text\n        });\n      }\n    };\n\n    _this.upFirst = function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    };\n\n    _this.changeMode = function () {\n      if (!_this.props.name || !_this.state.templateId) return _this.setState({\n        mode: true\n      });\n\n      _this.setState({\n        mode: !_this.state.mode\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, templates, key;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_this.props.mode) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _this.templateAction('update');\n\n                _context.next = 4;\n                return axios('http://localhost:4000/gettemplate');\n\n              case 4:\n                response = _context.sent;\n                response = response.data.hits.hits;\n                templates = new Map();\n\n                for (key in response) {\n                  templates.set(response[key]._id, response[key]._source);\n                }\n\n                _this.setState({\n                  templates: templates,\n                  rendered: _this.state.text\n                });\n\n                _context.next = 12;\n                break;\n\n              case 11:\n                _this.setState({\n                  rendered: _this.state.template\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    };\n\n    _this.placeAttribute = function (e) {\n      if (e.target.value === 'Add attribute') return;\n\n      var textemp = _this.state.template.slice(0);\n\n      var text = document.getElementById('emailEditor');\n      var nwTemp = textemp.split(\"\");\n\n      if (text.selectionStart === text.selectionEnd) {\n        var _nwTemp;\n\n        (_nwTemp = nwTemp).splice.apply(_nwTemp, [text.selectionStart, 0].concat(_toConsumableArray(\"{\" + e.target.value + \"}\".split(''))));\n      } else {\n        var _nwTemp2;\n\n        (_nwTemp2 = nwTemp).splice.apply(_nwTemp2, [text.selectionStart, text.selectionEnd - text.selectionStart].concat(_toConsumableArray(\"{\" + e.target.value + \"}\".split(''))));\n      }\n\n      nwTemp = nwTemp.join(\"\");\n      console.log(nwTemp);\n\n      _this.setState({\n        template: nwTemp,\n        rendered: nwTemp\n      });\n\n      console.log(document.getElementsByTagName('select')[0]);\n      document.getElementsByTagName('select')[0].value = 'Add attribute';\n    };\n\n    _this.sendMessage = function () {\n      var body = \"\";\n\n      for (var h in _this.state.headers) {\n        body += h += \": \" + _this.state.headers[h] + \"\\r\\n\";\n      }\n\n      body += \"\\r\\n\" + _this.state.text;\n      console.log(_this.state.text);\n      console.log(body); //replace(/\\+/g, '-').replace(/\\//g, '_')\n\n      var sendRequest = window.gapi.client.gmail.users.messages.send({\n        'userId': 'me',\n        'resource': {\n          'raw': window.btoa(body)\n        }\n      });\n      return sendRequest.execute(function (a) {\n        console.log(a);\n      }, function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.templateAction =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(action) {\n        var del, upd;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(action);\n                _context3.t0 = action;\n                _context3.next = _context3.t0 === \"save\" ? 4 : _context3.t0 === \"delete\" ? 6 : _context3.t0 === \"update\" ? 11 : _context3.t0 === \"new\" ? 16 : 18;\n                break;\n\n              case 4:\n                axios.post('http://localhost:4000/recordtemplate', {\n                  name: document.getElementById(\"templateName\").value,\n                  subject: _this.state.headers.subject,\n                  text: _this.state.template\n                }).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee2(resp) {\n                    var templates;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            console.log(resp);\n\n                            _this.setState({\n                              newTemplate: false,\n                              templateId: document.getElementById(\"templateName\").value\n                            });\n\n                            _context2.next = 4;\n                            return axios('http://localhost:4000/gettemplate');\n\n                          case 4:\n                            templates = _context2.sent;\n                            console.log(templates);\n                            templates = templates.data.hits.hits;\n\n                            _this.setState({\n                              templates: templates\n                            }, function () {\n                              console.log(_this.state);\n                            });\n\n                          case 8:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n                return _context3.abrupt(\"break\", 18);\n\n              case 6:\n                _context3.next = 8;\n                return axios.post(\"http://localhost:4000/deletetemplate\", {\n                  name: _this.state.templateId\n                });\n\n              case 8:\n                del = _context3.sent;\n                console.log(del);\n                return _context3.abrupt(\"break\", 18);\n\n              case 11:\n                _context3.next = 13;\n                return axios.post('http://localhost:4000/updatetemplate', {\n                  name: _this.state.templateId,\n                  text: _this.state.template\n                });\n\n              case 13:\n                upd = _context3.sent;\n                console.log(upd);\n                return _context3.abrupt(\"break\", 18);\n\n              case 16:\n                if (_this.state.templateId) _this.templateAction(\"update\");\n\n                _this.setState({\n                  template: \"\",\n                  text: \"\",\n                  templateId: false,\n                  newTemplate: true\n                });\n\n              case 18:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.selectTemplate = function (id) {\n      if (id === 'Add template') return;\n      console.log(id);\n\n      _this.setState({\n        templateId: id\n      }, function () {\n        console.log(_this.state.templateId);\n        var text = '';\n\n        if (_this.state.mode) {\n          text = _this.state.templates.get(_this.state.templateId);\n          console.log(text);\n          text = text.text;\n\n          _this.setState({\n            template: text,\n            rendered: text\n          });\n\n          if (_this.props.name) _this.setState({\n            text: _this.loadTemplate()\n          });\n        } else {\n          text = _this.state.templates.get(_this.state.templateId);\n          text = text.text;\n\n          _this.setState({\n            template: text,\n            text: _this.loadTemplate(),\n            rendered: _this.loadTemplate()\n          });\n        }\n      });\n    };\n\n    _this.loadTemplate = function () {\n      var text = _this.state.template.split('');\n\n      console.log(text);\n\n      var first = _this.upFirst(_this.props.name.first);\n\n      var last = _this.upFirst(_this.props.name.last);\n\n      var company = _this.upFirst(_this.props.name.domain.split('.')[0]);\n\n      for (var i = 0; i < text.length - 1; i++) {\n        if (text[i] === '{') {\n          var j = i;\n\n          while (text[j] !== \"}\") {\n            j = j + 1;\n          }\n\n          var word = text.slice(i + 1, j).join('');\n          var repwr = void 0;\n\n          switch (word) {\n            case \"FullName\":\n              repwr = first + \" \" + last;\n              break;\n\n            case \"FirstName\":\n              repwr = first;\n              console.log(text[i], first);\n              break;\n\n            case \"LastName\":\n              repwr = last;\n              break;\n\n            case \"Company\":\n              repwr = company;\n              break;\n          }\n\n          text.splice(i, j - i + 1, repwr);\n        }\n      }\n\n      return text.join(''); // this.setState( {text, rendered: text} );\n    };\n\n    _this.state = {\n      headers: {\n        from: \"vicfaucon@gmail.com\",\n        to: \"vicfaucon@gmail.com\",\n        subject: \"Full Stack Engineer position at \"\n      },\n      text: '',\n      templates: new Map(),\n      rendered: '',\n      template: '',\n      mode: false,\n      newTemplate: false\n    };\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var response, templates, key;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(this.props);\n                _context4.next = 3;\n                return axios('http://localhost:4000/gettemplate');\n\n              case 3:\n                response = _context4.sent;\n                response = response.data.hits.hits;\n                console.log(response);\n                templates = new Map();\n\n                for (key in response) {\n                  templates.set(response[key]._id, response[key]._source);\n                }\n\n                this.setState({\n                  templates: templates\n                }, function () {\n                  console.log(_this2.state);\n                });\n                this.changeMode();\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var templates = [];\n      this.state.templates.forEach(function (x, i) {\n        if (x) templates.push(React.createElement(\"option\", {\n          key: i,\n          value: x.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, x.name));\n      });\n      var tempSet = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onClick: this.placeAttribute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Add attribute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Add attribute\"), React.createElement(\"option\", {\n        value: \"FullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"option\", {\n        value: \"FirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"option\", {\n        value: \"LastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"option\", {\n        value: \"Company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Company\")));\n      return React.createElement(\"div\", {\n        className: \"Message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EmailForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"to\",\n        placeholder: \"To\",\n        value: this.props.selAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"subject\",\n        placeholder: \"Subject\",\n        onChange: this.changeSubject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"setting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, this.state.newTemplate ? React.createElement(\"input\", {\n        id: \"templateName\",\n        placeholder: \"Name the new template\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }) : null, this.state.mode ? tempSet : null, React.createElement(Switch, {\n        className: \"Switch\",\n        onChange: this.changeMode,\n        checked: this.state.mode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), this.state.newTemplate ? null : React.createElement(\"select\", {\n        id: \"templatesName\",\n        onClick: function onClick(e) {\n          return _this3.selectTemplate(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Add template\"), templates)), React.createElement(\"textarea\", {\n        id: \"emailEditor\",\n        placeholder: \"Type your email\",\n        onChange: this.changeMessage,\n        onClick: this.getCursPos,\n        value: this.state.rendered,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), this.state.mode ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"delete\",\n        onClick: function onClick(e) {\n          return _this3.templateAction(e.target.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        id: \"update\",\n        onClick: function onClick(e) {\n          return _this3.templateAction(e.target.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Update\")) : React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Send\"), this.state.newTemplate ? React.createElement(\"button\", {\n        id: \"save\",\n        onClick: function onClick(e) {\n          return _this3.templateAction(e.target.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Save\") : React.createElement(\"button\", {\n        id: \"new\",\n        onClick: function onClick(e) {\n          return _this3.templateAction(e.target.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"New\")));\n    }\n  }]);\n\n  return Message;\n}(React.Component);\n\nexport default Message;","map":{"version":3,"sources":["/home/victor/Documents/dadTools/emailFinder/src/components/Message.js"],"names":["React","axios","Switch","Message","props","changeSubject","e","s","state","subject","target","value","setState","changeMessage","text","mode","template","rendered","name","loadTemplate","upFirst","word","charAt","toUpperCase","slice","changeMode","templateId","templateAction","response","data","hits","templates","Map","key","set","_id","_source","placeAttribute","textemp","document","getElementById","nwTemp","split","selectionStart","selectionEnd","splice","join","console","log","getElementsByTagName","sendMessage","body","h","headers","sendRequest","window","gapi","client","gmail","users","messages","send","btoa","execute","a","error","action","post","then","resp","newTemplate","del","upd","selectTemplate","id","get","first","last","company","domain","i","length","j","repwr","from","to","forEach","x","push","tempSet","selAdd","getCursPos","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAMA,KAAN;;AADc,UA+BlBC,aA/BkB,GA+BF,UAACC,CAAD,EAAO;AACnB,UAAIC,CAAC,qBAAQ,MAAKC,KAAb,CAAL;;AACAD,MAAAA,CAAC,CAACE,OAAF,GAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;;AACA,YAAKC,QAAL,CAAcL,CAAd;AACH,KAnCiB;;AAAA,UAqClBM,aArCkB,GAqCF,UAACP,CAAD,EAAO;AACnB,UAAIQ,IAAI,GAAGR,CAAC,CAACI,MAAF,CAASC,KAApB;;AACA,UAAG,MAAKH,KAAL,CAAWO,IAAd,EAAoB;AAChB,cAAKH,QAAL,CAAe;AAAEI,UAAAA,QAAQ,EAAEF,IAAZ;AAAkBG,UAAAA,QAAQ,EAAEH;AAA5B,SAAf;;AACA,YAAG,MAAKV,KAAL,CAAWc,IAAd,EAAoB,MAAKN,QAAL,CAAe;AAAEE,UAAAA,IAAI,EAAE,MAAKK,YAAL;AAAR,SAAf;AACvB,OAHD,MAGO;AACH,cAAKP,QAAL,CAAe;AAACK,UAAAA,QAAQ,EAAEH,IAAX;AAAiBA,UAAAA,IAAI,EAAJA;AAAjB,SAAf;AACH;AACJ,KA7CiB;;AAAA,UA+ClBM,OA/CkB,GA+CR,UAACC,IAAD,EAAU;AAChB,aAAOA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAtC;AAEH,KAlDiB;;AAAA,UAoDlBC,UApDkB,GAoDL,YAAM;AACf,UAAG,CAAC,MAAKrB,KAAL,CAAWc,IAAZ,IAAoB,CAAC,MAAKV,KAAL,CAAWkB,UAAnC,EAA+C,OAAO,MAAKd,QAAL,CAAe;AAACG,QAAAA,IAAI,EAAE;AAAP,OAAf,CAAP;;AAE/C,YAAKH,QAAL,CAAe;AAACG,QAAAA,IAAI,EAAE,CAAC,MAAKP,KAAL,CAAWO;AAAnB,OAAf;AAAA;AAAA;AAAA;AAAA,+BAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAClC,MAAKX,KAAL,CAAWW,IADuB;AAAA;AAAA;AAAA;;AAElC,sBAAKY,cAAL,CAAoB,QAApB;;AAFkC;AAAA,uBAGb1B,KAAK,CAAC,mCAAD,CAHQ;;AAAA;AAG9B2B,gBAAAA,QAH8B;AAIlCA,gBAAAA,QAAQ,GAAGA,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBA,IAA9B;AACIC,gBAAAA,SAL8B,GAKlB,IAAIC,GAAJ,EALkB;;AAMlC,qBAAQC,GAAR,IAAeL,QAAf,EAAwB;AACpBG,kBAAAA,SAAS,CAACG,GAAV,CAAcN,QAAQ,CAACK,GAAD,CAAR,CAAcE,GAA5B,EAAiCP,QAAQ,CAACK,GAAD,CAAR,CAAcG,OAA/C;AACH;;AACD,sBAAKxB,QAAL,CAAe;AAAEmB,kBAAAA,SAAS,EAATA,SAAF;AAAad,kBAAAA,QAAQ,EAAE,MAAKT,KAAL,CAAWM;AAAlC,iBAAf;;AATkC;AAAA;;AAAA;AAU/B,sBAAKF,QAAL,CAAe;AAACK,kBAAAA,QAAQ,EAAE,MAAKT,KAAL,CAAWQ;AAAtB,iBAAf;;AAV+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA1C;AAYH,KAnEiB;;AAAA,UAuElBqB,cAvEkB,GAuED,UAAC/B,CAAD,EAAO;AAEpB,UAAGA,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmB,eAAtB,EAAuC;;AAGvC,UAAI2B,OAAO,GAAG,MAAK9B,KAAL,CAAWQ,QAAX,CAAoBQ,KAApB,CAA0B,CAA1B,CAAd;;AAEA,UAAIV,IAAI,GAAGyB,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAX;AAEA,UAAIC,MAAM,GAAGH,OAAO,CAACI,KAAR,CAAc,EAAd,CAAb;;AAEA,UAAG5B,IAAI,CAAC6B,cAAL,KAAwB7B,IAAI,CAAC8B,YAAhC,EAA6C;AAAA;;AACzC,mBAAAH,MAAM,EAACI,MAAP,iBAAc/B,IAAI,CAAC6B,cAAnB,EAAmC,CAAnC,4BAAyC,MAAIrC,CAAC,CAACI,MAAF,CAASC,KAAb,GAAmB,IAAI+B,KAAJ,CAAU,EAAV,CAA5D;AACH,OAFD,MAEO;AAAA;;AACH,oBAAAD,MAAM,EAACI,MAAP,kBAAc/B,IAAI,CAAC6B,cAAnB,EAAmC7B,IAAI,CAAC8B,YAAL,GAAoB9B,IAAI,CAAC6B,cAA5D,4BAA+E,MAAIrC,CAAC,CAACI,MAAF,CAASC,KAAb,GAAmB,IAAI+B,KAAJ,CAAU,EAAV,CAAlG;AACH;;AAEDD,MAAAA,MAAM,GAAGA,MAAM,CAACK,IAAP,CAAY,EAAZ,CAAT;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AAEA,YAAK7B,QAAL,CAAe;AAAEI,QAAAA,QAAQ,EAAEyB,MAAZ;AAAoBxB,QAAAA,QAAQ,EAAEwB;AAA9B,OAAf;;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACU,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAAZ;AACAV,MAAAA,QAAQ,CAACU,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,EAA2CtC,KAA3C,GAAmD,eAAnD;AAEH,KAhGiB;;AAAA,UAkGlBuC,WAlGkB,GAkGJ,YAAM;AAChB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAI,IAAIC,CAAR,IAAa,MAAK5C,KAAL,CAAW6C,OAAxB,EAAgC;AAC5BF,QAAAA,IAAI,IAAIC,CAAC,IAAI,OAAO,MAAK5C,KAAL,CAAW6C,OAAX,CAAmBD,CAAnB,CAAP,GAA+B,MAA5C;AACH;;AACDD,MAAAA,IAAI,IAAI,SAAS,MAAK3C,KAAL,CAAWM,IAA5B;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKxC,KAAL,CAAWM,IAAvB;AAEAiC,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EARgB,CAShB;;AACA,UAAMG,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyBC,KAAzB,CAA+BC,QAA/B,CAAwCC,IAAxC,CAA6C;AAC7D,kBAAU,IADmD;AAE7D,oBAAY;AACR,iBAAON,MAAM,CAACO,IAAP,CAAYX,IAAZ;AADC;AAFiD,OAA7C,CAApB;AAOA,aAAOG,WAAW,CAACS,OAAZ,CAAoB,UAACC,CAAD,EAAM;AAACjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,CAAZ;AAAe,OAA1C,EAA4C,UAACC,KAAD,EAAS;AAAClB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AAAmB,OAAzE,CAAP;AAEH,KArHiB;;AAAA,UAuHlBtC,cAvHkB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAuHD,kBAAOuC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbnB,gBAAAA,OAAO,CAACC,GAAR,CAAYkB,MAAZ;AADa,+BAENA,MAFM;AAAA,kDAGJ,MAHI,wBAkBJ,QAlBI,wBAuBJ,QAvBI,yBA4BJ,KA5BI;AAAA;;AAAA;AAILjE,gBAAAA,KAAK,CAACkE,IAAN,CAAW,sCAAX,EAAmD;AAC/CjD,kBAAAA,IAAI,EAAEqB,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwC7B,KADC;AAE/CF,kBAAAA,OAAO,EAAE,MAAKD,KAAL,CAAW6C,OAAX,CAAmB5C,OAFmB;AAG/CK,kBAAAA,IAAI,EAAE,MAAKN,KAAL,CAAWQ;AAH8B,iBAAnD,EAIGoD,IAJH;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIQ,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACJtB,4BAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;;AACA,kCAAKzD,QAAL,CAAc;AAAC0D,8BAAAA,WAAW,EAAE,KAAd;AAAqB5C,8BAAAA,UAAU,EAACa,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwC7B;AAAxE,6BAAd;;AAFI;AAAA,mCAGkBV,KAAK,CAAC,mCAAD,CAHvB;;AAAA;AAGA8B,4BAAAA,SAHA;AAIJgB,4BAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACAA,4BAAAA,SAAS,GAAGA,SAAS,CAACF,IAAV,CAAeC,IAAf,CAAoBA,IAAhC;;AACA,kCAAKlB,QAAL,CAAe;AAAEmB,8BAAAA,SAAS,EAATA;AAAF,6BAAf,EAA8B,YAAI;AAACgB,8BAAAA,OAAO,CAACC,GAAR,CAAY,MAAKxC,KAAjB;AAAwB,6BAA3D;;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJR;;AAAA;AAAA;AAAA;AAAA;AAJK;;AAAA;AAAA;AAAA,uBAmBWP,KAAK,CAACkE,IAAN,CAAW,sCAAX,EAAmD;AAACjD,kBAAAA,IAAI,EAAE,MAAKV,KAAL,CAAWkB;AAAlB,iBAAnD,CAnBX;;AAAA;AAmBD6C,gBAAAA,GAnBC;AAoBLxB,gBAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAZ;AApBK;;AAAA;AAAA;AAAA,uBAwBWtE,KAAK,CAACkE,IAAN,CAAW,sCAAX,EAAmD;AAACjD,kBAAAA,IAAI,EAAE,MAAKV,KAAL,CAAWkB,UAAlB;AAA8BZ,kBAAAA,IAAI,EAAE,MAAKN,KAAL,CAAWQ;AAA/C,iBAAnD,CAxBX;;AAAA;AAwBDwD,gBAAAA,GAxBC;AAyBLzB,gBAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AAzBK;;AAAA;AA6BL,oBAAG,MAAKhE,KAAL,CAAWkB,UAAd,EAA0B,MAAKC,cAAL,CAAoB,QAApB;;AAC1B,sBAAKf,QAAL,CAAc;AAACI,kBAAAA,QAAQ,EAAC,EAAV;AAAcF,kBAAAA,IAAI,EAAC,EAAnB;AAAuBY,kBAAAA,UAAU,EAAE,KAAnC;AAA0C4C,kBAAAA,WAAW,EAAE;AAAvD,iBAAd;;AA9BK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAvHC;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA4JlBG,cA5JkB,GA4JD,UAACC,EAAD,EAAQ;AACrB,UAAGA,EAAE,KAAK,cAAV,EAA0B;AAC1B3B,MAAAA,OAAO,CAACC,GAAR,CAAY0B,EAAZ;;AAGA,YAAK9D,QAAL,CAAe;AAACc,QAAAA,UAAU,EAAEgD;AAAb,OAAf,EAAiC,YAAM;AACnC3B,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKxC,KAAL,CAAWkB,UAAvB;AACJ,YAAIZ,IAAI,GAAG,EAAX;;AAEA,YAAG,MAAKN,KAAL,CAAWO,IAAd,EAAoB;AAChBD,UAAAA,IAAI,GAAG,MAAKN,KAAL,CAAWuB,SAAX,CAAqB4C,GAArB,CAAyB,MAAKnE,KAAL,CAAWkB,UAApC,CAAP;AACAqB,UAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAZ;AACAA,UAAAA,IAAI,GAAGA,IAAI,CAACA,IAAZ;;AACA,gBAAKF,QAAL,CAAe;AAACI,YAAAA,QAAQ,EAACF,IAAV;AAAgBG,YAAAA,QAAQ,EAACH;AAAzB,WAAf;;AACA,cAAG,MAAKV,KAAL,CAAWc,IAAd,EAAoB,MAAKN,QAAL,CAAe;AAACE,YAAAA,IAAI,EAAE,MAAKK,YAAL;AAAP,WAAf;AACvB,SAND,MAOK;AACDL,UAAAA,IAAI,GAAG,MAAKN,KAAL,CAAWuB,SAAX,CAAqB4C,GAArB,CAAyB,MAAKnE,KAAL,CAAWkB,UAApC,CAAP;AACAZ,UAAAA,IAAI,GAAGA,IAAI,CAACA,IAAZ;;AACA,gBAAKF,QAAL,CAAe;AAACI,YAAAA,QAAQ,EAACF,IAAV;AAAgBA,YAAAA,IAAI,EAAC,MAAKK,YAAL,EAArB;AAA0CF,YAAAA,QAAQ,EAAC,MAAKE,YAAL;AAAnD,WAAf;AAEH;AACJ,OAjBG;AAoBH,KArLiB;;AAAA,UAuLlBA,YAvLkB,GAuLH,YAAM;AACjB,UAAIL,IAAI,GAAG,MAAKN,KAAL,CAAWQ,QAAX,CAAoB0B,KAApB,CAA0B,EAA1B,CAAX;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAZ;;AAEA,UAAI8D,KAAK,GAAG,MAAKxD,OAAL,CAAa,MAAKhB,KAAL,CAAWc,IAAX,CAAgB0D,KAA7B,CAAZ;;AACA,UAAIC,IAAI,GAAG,MAAKzD,OAAL,CAAa,MAAKhB,KAAL,CAAWc,IAAX,CAAgB2D,IAA7B,CAAX;;AACA,UAAIC,OAAO,GAAG,MAAK1D,OAAL,CAAa,MAAKhB,KAAL,CAAWc,IAAX,CAAgB6D,MAAhB,CAAuBrC,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAb,CAAd;;AAGA,WAAI,IAAIsC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGlE,IAAI,CAACmE,MAAL,GAAY,CAA/B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,YAAGlE,IAAI,CAACkE,CAAD,CAAJ,KAAY,GAAf,EAAmB;AACf,cAAIE,CAAC,GAAGF,CAAR;;AACA,iBAAMlE,IAAI,CAACoE,CAAD,CAAJ,KAAY,GAAlB,EAAsB;AAClBA,YAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACH;;AACD,cAAI7D,IAAI,GAAGP,IAAI,CAACU,KAAL,CAAWwD,CAAC,GAAC,CAAb,EAAgBE,CAAhB,EAAmBpC,IAAnB,CAAwB,EAAxB,CAAX;AACA,cAAIqC,KAAK,SAAT;;AACA,kBAAO9D,IAAP;AACI,iBAAK,UAAL;AACI8D,cAAAA,KAAK,GAAGP,KAAK,GAAG,GAAR,GAAcC,IAAtB;AACA;;AACJ,iBAAK,WAAL;AACIM,cAAAA,KAAK,GAAGP,KAAR;AACA7B,cAAAA,OAAO,CAACC,GAAR,CAAYlC,IAAI,CAACkE,CAAD,CAAhB,EAAqBJ,KAArB;AACA;;AACJ,iBAAK,UAAL;AACIO,cAAAA,KAAK,GAAGN,IAAR;AACA;;AACJ,iBAAK,SAAL;AACIM,cAAAA,KAAK,GAAGL,OAAR;AACA;AAbR;;AAeAhE,UAAAA,IAAI,CAAC+B,MAAL,CAAYmC,CAAZ,EAAeE,CAAC,GAACF,CAAF,GAAI,CAAnB,EAAsBG,KAAtB;AAEH;AAEJ;;AAED,aAAOrE,IAAI,CAACgC,IAAL,CAAU,EAAV,CAAP,CAtCiB,CAwCjB;AAEH,KAjOiB;;AAEd,UAAKtC,KAAL,GAAa;AACT6C,MAAAA,OAAO,EAAE;AACL+B,QAAAA,IAAI,EAAC,qBADA;AAELC,QAAAA,EAAE,EAAC,qBAFE;AAGL5E,QAAAA,OAAO,EAAE;AAHJ,OADA;AAMTK,MAAAA,IAAI,EAAE,EANG;AAOTiB,MAAAA,SAAS,EAAE,IAAIC,GAAJ,EAPF;AAQTf,MAAAA,QAAQ,EAAE,EARD;AASTD,MAAAA,QAAQ,EAAE,EATD;AAUTD,MAAAA,IAAI,EAAE,KAVG;AAWTuD,MAAAA,WAAW,EAAE;AAXJ,KAAb;AAFc;AAejB;;;;;;;;;;;;;;;AAGGvB,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5C,KAAjB;;uBACqBH,KAAK,CAAC,mCAAD,C;;;AAAtB2B,gBAAAA,Q;AACJA,gBAAAA,QAAQ,GAAGA,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBA,IAA9B;AACAiB,gBAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAZ;AACIG,gBAAAA,S,GAAY,IAAIC,GAAJ,E;;AAChB,qBAAQC,GAAR,IAAeL,QAAf,EAAwB;AACpBG,kBAAAA,SAAS,CAACG,GAAV,CAAcN,QAAQ,CAACK,GAAD,CAAR,CAAcE,GAA5B,EAAiCP,QAAQ,CAACK,GAAD,CAAR,CAAcG,OAA/C;AACH;;AACD,qBAAKxB,QAAL,CAAe;AAAEmB,kBAAAA,SAAS,EAATA;AAAF,iBAAf,EAA8B,YAAI;AAACgB,kBAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACxC,KAAjB;AAAwB,iBAA3D;AACA,qBAAKiB,UAAL;;;;;;;;;;;;;;;;;;6BA0MI;AAAA;;AAEJ,UAAIM,SAAS,GAAG,EAAhB;AAEA,WAAKvB,KAAL,CAAWuB,SAAX,CAAqBuD,OAArB,CAA6B,UAACC,CAAD,EAAIP,CAAJ,EAAU;AACnC,YAAGO,CAAH,EAAMxD,SAAS,CAACyD,IAAV,CAAe;AAAQ,UAAA,GAAG,EAAER,CAAb;AAAgB,UAAA,KAAK,EAAEO,CAAC,CAACrE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCqE,CAAC,CAACrE,IAAlC,CAAf;AACT,OAFD;AAIA,UAAIuE,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKpD,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAKI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,CADF,CAAd;AAYA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAC,IAAV;AAAe,QAAA,WAAW,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWsF,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,EAAE,EAAC,SAAX;AAAqB,QAAA,WAAW,EAAC,SAAjC;AAA2C,QAAA,QAAQ,EAAE,KAAKrF,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAII;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKG,KAAL,CAAW8D,WAAX,GAA0B;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,WAAW,EAAC,uBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAA2F,IADhG,EAEK,KAAK9D,KAAL,CAAWO,IAAX,GAAkB0E,OAAlB,GAA4B,IAFjC,EAII,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,QAAQ,EAAE,KAAKhE,UAA1C;AAAsD,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWO,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKK,KAAKP,KAAL,CAAW8D,WAAX,GAAyB,IAAzB,GACG;AAAQ,QAAA,EAAE,EAAC,eAAX;AAA2B,QAAA,OAAO,EAAE,iBAAChE,CAAD;AAAA,iBAAO,MAAI,CAACmE,cAAL,CAAoBnE,CAAC,CAACI,MAAF,CAASC,KAA7B,CAAP;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEKoB,SAFL,CANR,CAJJ,EAgBI;AAAW,QAAA,EAAE,EAAC,aAAd;AAA4B,QAAA,WAAW,EAAC,iBAAxC;AAA0D,QAAA,QAAQ,EAAE,KAAKlB,aAAzE;AAAwF,QAAA,OAAO,EAAE,KAAK8E,UAAtG;AAAkH,QAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWS,QAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAiBK,KAAKT,KAAL,CAAWO,IAAX,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,OAAO,EAAE,iBAACT,CAAD;AAAA,iBAAK,MAAI,CAACqB,cAAL,CAAoBrB,CAAC,CAACI,MAAF,CAASgE,EAA7B,CAAL;AAAA,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,OAAO,EAAE,iBAACpE,CAAD;AAAA,iBAAK,MAAI,CAACqB,cAAL,CAAoBrB,CAAC,CAACI,MAAF,CAASgE,EAA7B,CAAL;AAAA,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADC,GAKC;AAAQ,QAAA,OAAO,EAAE,KAAKxB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBN,EAuBK,KAAK1C,KAAL,CAAW8D,WAAX,GAAyB;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAE,iBAAChE,CAAD;AAAA,iBAAK,MAAI,CAACqB,cAAL,CAAoBrB,CAAC,CAACI,MAAF,CAASgE,EAA7B,CAAL;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAzB,GACD;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,OAAO,EAAE,iBAACpE,CAAD;AAAA,iBAAK,MAAI,CAACqB,cAAL,CAAoBrB,CAAC,CAACI,MAAF,CAASgE,EAA7B,CAAL;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAxBJ,CAFJ,CADJ;AA+BH;;;;EAzRiB1E,KAAK,CAAC4F,S;;AA4R5B,eAAezF,OAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Switch from \"react-switch\";\n\nclass Message extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            headers: {\n                from:\"vicfaucon@gmail.com\",\n                to:\"vicfaucon@gmail.com\",\n                subject: \"Full Stack Engineer position at \"\n            },\n            text: '',\n            templates: new Map(),\n            rendered: '',\n            template: '',\n            mode: false,\n            newTemplate: false\n        }\n    }\n\n    async componentDidMount(){\n        console.log(this.props);\n        let response = await axios('http://localhost:4000/gettemplate');\n        response = response.data.hits.hits;\n        console.log(response);\n        let templates = new Map();\n        for(let key in response){\n            templates.set(response[key]._id, response[key]._source);\n        }\n        this.setState( { templates }, ()=>{console.log(this.state)} );\n        this.changeMode();\n    }\n\n\n    changeSubject = (e) => {\n        let s = { ...this.state };\n        s.subject = e.target.value;\n        this.setState(s);\n    }\n\n    changeMessage = (e) => {\n        let text = e.target.value;\n        if(this.state.mode) {\n            this.setState( { template: text, rendered: text } );\n            if(this.props.name) this.setState( { text: this.loadTemplate() } );\n        } else {\n            this.setState( {rendered: text, text} )\n        }\n    }\n\n    upFirst = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n\n    }\n\n    changeMode = () => {\n        if(!this.props.name || !this.state.templateId) return this.setState( {mode: true});\n\n        this.setState( {mode: !this.state.mode }, async () => {\n            if(!this.props.mode){\n                this.templateAction('update');\n                let response = await axios('http://localhost:4000/gettemplate');\n                response = response.data.hits.hits;\n                let templates = new Map();\n                for(let key in response){\n                    templates.set(response[key]._id, response[key]._source);\n                }\n                this.setState( { templates, rendered: this.state.text } );\n            } else this.setState( {rendered: this.state.template} )\n    });\n    }\n\n  \n\n    placeAttribute = (e) => {\n\n        if(e.target.value === 'Add attribute') return;\n\n    \n        let textemp = this.state.template.slice(0);\n\n        let text = document.getElementById('emailEditor');\n\n        let nwTemp = textemp.split(\"\")\n\n        if(text.selectionStart === text.selectionEnd){\n            nwTemp.splice(text.selectionStart, 0, ...\"{\"+e.target.value+\"}\".split(''));\n        } else {\n            nwTemp.splice(text.selectionStart, text.selectionEnd - text.selectionStart, ...\"{\"+e.target.value+\"}\".split(''))\n        }\n\n        nwTemp = nwTemp.join(\"\");\n\n        console.log(nwTemp);\n        \n        this.setState( { template: nwTemp, rendered: nwTemp} );\n        console.log(document.getElementsByTagName('select')[0]);\n        document.getElementsByTagName('select')[0].value = 'Add attribute';\n\n    }\n\n    sendMessage = () => {\n        let body = \"\"\n        for(let h in this.state.headers){\n            body += h += \": \" + this.state.headers[h] + \"\\r\\n\"\n        }\n        body += \"\\r\\n\" + this.state.text;\n        console.log(this.state.text);\n\n        console.log(body)\n        //replace(/\\+/g, '-').replace(/\\//g, '_')\n        const sendRequest = window.gapi.client.gmail.users.messages.send({\n            'userId': 'me',\n            'resource': {\n                'raw': window.btoa(body)\n            }\n        })\n\n        return sendRequest.execute((a)=> {console.log(a)}, (error)=>{console.log(error)})\n\n    }\n\n    templateAction = async (action) => {\n        console.log(action);\n        switch(action){\n            case \"save\":\n                axios.post('http://localhost:4000/recordtemplate', {\n                    name: document.getElementById(\"templateName\").value,\n                    subject: this.state.headers.subject,\n                    text: this.state.template\n                }).then(async (resp) => {\n                    console.log(resp);\n                    this.setState({newTemplate: false, templateId:document.getElementById(\"templateName\").value });\n                    let templates = await axios('http://localhost:4000/gettemplate');\n                    console.log(templates);\n                    templates = templates.data.hits.hits;\n                    this.setState( { templates }, ()=>{console.log(this.state)} );\n                });\n                break;\n            \n            case \"delete\":\n                let del = await axios.post(\"http://localhost:4000/deletetemplate\", {name: this.state.templateId});\n                console.log(del);\n                break;\n\n            case \"update\":\n                let upd = await axios.post('http://localhost:4000/updatetemplate', {name: this.state.templateId, text: this.state.template});\n                console.log(upd);\n                break;\n\n            case \"new\":\n                if(this.state.templateId) this.templateAction(\"update\");\n                this.setState({template:\"\", text:\"\", templateId: false, newTemplate: true})\n                \n\n        }\n\n    }\n \n    selectTemplate = (id) => {\n        if(id === 'Add template') return;\n        console.log(id)\n\n\n        this.setState( {templateId: id}, () => {\n            console.log(this.state.templateId);\n        let text = '';\n\n        if(this.state.mode) {\n            text = this.state.templates.get(this.state.templateId);\n            console.log(text);\n            text = text.text;\n            this.setState( {template:text, rendered:text} );\n            if(this.props.name) this.setState( {text: this.loadTemplate()} );\n        }\n        else {\n            text = this.state.templates.get(this.state.templateId);\n            text = text.text;\n            this.setState( {template:text, text:this.loadTemplate(), rendered:this.loadTemplate()} )\n            \n        }\n    });\n        \n        \n    }\n    \n    loadTemplate = () => {\n        let text = this.state.template.split('');\n        console.log(text)\n\n        let first = this.upFirst(this.props.name.first);\n        let last = this.upFirst(this.props.name.last);\n        let company = this.upFirst(this.props.name.domain.split('.')[0]);\n\n\n        for(let i = 0; i < text.length-1; i++){\n            if(text[i] === '{'){\n                let j = i;\n                while(text[j] !== \"}\"){\n                    j = j + 1;\n                }\n                let word = text.slice(i+1, j).join('');\n                let repwr;\n                switch(word){\n                    case \"FullName\":\n                        repwr = first + \" \" + last;\n                        break;\n                    case \"FirstName\":\n                        repwr = first;\n                        console.log(text[i], first)\n                        break;\n                    case \"LastName\":\n                        repwr = last;\n                        break;\n                    case \"Company\":\n                        repwr = company;\n                        break;\n                }\n                text.splice(i, j-i+1, repwr)\n                \n            }\n            \n        }\n\n        return text.join('');\n\n        // this.setState( {text, rendered: text} );\n\n    }\n\n\n\n    render(){\n\n        let templates = [];\n\n        this.state.templates.forEach((x, i) => {\n            if(x) templates.push(<option key={i} value={x.name}>{x.name}</option>)\n        })\n\n        let tempSet = <span>\n                        <select onClick={this.placeAttribute}>\n                            <option value=\"Add attribute\">Add attribute</option>\n                            <option value=\"FullName\">Full Name</option>\n                            <option value=\"FirstName\">First Name</option>\n                            <option value=\"LastName\">Last Name</option>\n                            <option value=\"Company\">Company</option>\n                        </select>\n                       \n                    </span>\n        \n\n        return(\n            <div className=\"Message\">\n                \n                <div className=\"EmailForm\">\n                    <input id=\"to\" placeholder=\"To\" value={this.props.selAdd}/>\n                    <input  id=\"subject\" placeholder=\"Subject\" onChange={this.changeSubject}/>\n                    \n                    <div id=\"setting\">\n                        {this.state.newTemplate ?  <input id=\"templateName\" placeholder=\"Name the new template\"/> : null}\n                        {this.state.mode ? tempSet : null}\n                    \n                        <Switch className=\"Switch\" onChange={this.changeMode} checked={this.state.mode} />\n                        {this.state.newTemplate ? null :\n                            <select id=\"templatesName\" onClick={(e) => this.selectTemplate(e.target.value)}>\n                                <option>Add template</option>\n                                {templates}\n                            </select>}\n                    </div>\n\n                    <textarea  id=\"emailEditor\" placeholder=\"Type your email\" onChange={this.changeMessage} onClick={this.getCursPos} value={this.state.rendered}/>\n                    {this.state.mode ? \n                    <span>\n                        <button id=\"delete\" onClick={(e)=>this.templateAction(e.target.id)}>Delete</button>\n                        <button id=\"update\" onClick={(e)=>this.templateAction(e.target.id)}>Update</button>\n                    </span>\n                    : <button onClick={this.sendMessage}>Send</button>}\n                    {this.state.newTemplate ? <button id=\"save\" onClick={(e)=>this.templateAction(e.target.id)}>Save</button> :\n                    <button id=\"new\" onClick={(e)=>this.templateAction(e.target.id)}>New</button>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}