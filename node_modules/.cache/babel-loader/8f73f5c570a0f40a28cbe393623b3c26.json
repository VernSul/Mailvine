{"ast":null,"code":"import _classCallCheck from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/victor/Documents/dadTools/emailFinder/src/App.js\";\nimport React from 'react';\nimport Address from './Address';\nimport WritingEmail from './writingEmail';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleAuthClick = function (event) {\n      window.gapi.auth2.getAuthInstance().signIn();\n      console.log(window.gapi);\n    };\n\n    _this.handleSignoutClick = function (event) {\n      window.gapi.auth2.getAuthInstance().signOut();\n    };\n\n    _this.appendPre = function (message) {// var pre = document.getElementById('content');\n      // var textContent = document.createTextNode(message + '\\n');\n      // pre.appendChild(textContent);\n    };\n\n    _this.listLabels = function () {\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      window.gapi.client.gmail.users.labels.list({\n        'userId': 'me'\n      }).then(function (response) {\n        var labels = response.result.labels;\n        that.appendPre('Labels:');\n\n        if (labels && labels.length > 0) {\n          for (var i = 0; i < labels.length; i++) {\n            var label = labels[i];\n            that.appendPre(label.name);\n          }\n        } else {\n          that.appendPre('No Labels found.');\n        }\n      });\n    };\n\n    _this.selectAddress = function (i) {\n      var selAdd = _this.state.emails[i];\n      var emails = [];\n      var full = document.getElementsByClassName;\n      var first = e.target.value.split(\" \")[0];\n      var last = e.target.value.split(\" \")[1];\n      var name = {\n        first: first,\n        last: last\n      };\n\n      _this.setState({\n        name: name\n      });\n\n      _this.setState({\n        selAdd: selAdd,\n        emails: emails\n      });\n    };\n\n    _this.state = {\n      selAdd: false,\n      emails: [],\n      CLIENT_ID: '605121789952-64i5u4ggvju6qhlmkrkv71ol78qbk5aa.apps.googleusercontent.com',\n      API_KEY: 'AIzaSyBkrt40jx5wx3PG4S5W9B49Vm02RNh4vt0',\n      DISCOVERY_DOCS: [\"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"],\n      // Authorization scopes required by the API; multiple scopes can be\n      // included, separated by spaces.\n      SCOPES: 'https://www.googleapis.com/auth/gmail.readonly' + ' https://www.googleapis.com/auth/gmail.send'\n    };\n    _this.single = _this.single.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.initClient = _this.initClient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSigninStatus = _this.updateSigninStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"initClient\",\n    value: function initClient() {\n      var s = this.state;\n      var that = this;\n      window.gapi.client.init({\n        apiKey: s.API_KEY,\n        clientId: s.CLIENT_ID,\n        discoveryDocs: s.DISCOVERY_DOCS,\n        scope: s.SCOPES\n      }).then(function () {\n        // Listen for sign-in state changes.\n        window.gapi.auth2.getAuthInstance().isSignedIn.listen(that.updateSigninStatus); // Handle the initial sign-in state.\n\n        that.updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n      }, function (error) {\n        console.log(error);\n        this.appendPre(JSON.stringify(error, null, 2));\n      });\n    }\n  }, {\n    key: \"updateSigninStatus\",\n    value: function updateSigninStatus(isSignedIn) {\n      var authorizeButton = document.getElementById('authorize_button');\n      var signoutButton = document.getElementById('signout_button');\n\n      if (isSignedIn) {\n        authorizeButton.style.display = 'none';\n        signoutButton.style.display = 'block';\n        this.listLabels();\n      } else {\n        authorizeButton.style.display = 'block';\n        signoutButton.style.display = 'none';\n      }\n    }\n    /**\n       *  Sign in the user upon button click.\n       */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //const gmail = new gmailAPI(this.state.API_KEY, this.state.CLIENT_ID);\n      window.gapi.load('client:auth2', this.initClient); // gapi = window.gapi\n    }\n  }, {\n    key: \"single\",\n    value: function single(obj) {\n      var _this2 = this;\n\n      var forced = {\n        first: \"chris\",\n        last: \"lee\",\n        domain: \"bauerxcel.com\"\n      };\n      fetch(\"http://localhost:4000/single\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(forced)\n      }).then(function (data) {\n        console.log(data);\n        return data.json();\n      }).then(function (emails) {\n        _this2.setState({\n          emails: emails\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.state.selAdd ? React.createElement(WritingEmail, {\n        selAdd: this.state.selAdd,\n        single: this.single,\n        emails: this.state.emails,\n        selectAddress: this.selectAddress,\n        name: this.state.name,\n        changeName: this.changeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }) : React.createElement(Address, {\n        single: this.single,\n        emails: this.state.emails,\n        selectAddress: this.selectAddress,\n        selAdd: this.state.selAdd,\n        changeName: this.changeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/victor/Documents/dadTools/emailFinder/src/App.js"],"names":["React","Address","WritingEmail","App","props","handleAuthClick","event","window","gapi","auth2","getAuthInstance","signIn","console","log","handleSignoutClick","signOut","appendPre","message","listLabels","that","client","gmail","users","labels","list","then","response","result","length","i","label","name","selectAddress","selAdd","state","emails","full","document","getElementsByClassName","first","e","target","value","split","last","setState","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","single","bind","initClient","updateSigninStatus","s","init","apiKey","clientId","discoveryDocs","scope","isSignedIn","listen","get","error","JSON","stringify","authorizeButton","getElementById","signoutButton","style","display","load","obj","forced","domain","fetch","method","headers","body","data","json","changeName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Address from './Address';\nimport WritingEmail from './writingEmail';\n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            selAdd: false,\n            emails: [],\n            CLIENT_ID: '605121789952-64i5u4ggvju6qhlmkrkv71ol78qbk5aa.apps.googleusercontent.com',\n            API_KEY: 'AIzaSyBkrt40jx5wx3PG4S5W9B49Vm02RNh4vt0',\n            DISCOVERY_DOCS: [\"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"],\n       \n            // Authorization scopes required by the API; multiple scopes can be\n            // included, separated by spaces.\n            SCOPES: 'https://www.googleapis.com/auth/gmail.readonly'+' https://www.googleapis.com/auth/gmail.send'\n\n        }\n        this.single = this.single.bind(this);\n\n\n        this.initClient = this.initClient.bind(this);\n        this.updateSigninStatus = this.updateSigninStatus.bind(this);\n\n\n    }\n\n\n    initClient() {\n        const s = this.state;\n        let that = this;\n        window.gapi.client.init({\n          apiKey: s.API_KEY,\n          clientId: s.CLIENT_ID,\n          discoveryDocs: s.DISCOVERY_DOCS,\n          scope: s.SCOPES\n        }).then(function () {\n          // Listen for sign-in state changes.\n          window.gapi.auth2.getAuthInstance().isSignedIn.listen(that.updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          that.updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n         \n        }, function(error) {\n            console.log(error);\n            this.appendPre(JSON.stringify(error, null, 2));\n        });\n      }\n\n\n\n    updateSigninStatus(isSignedIn) {\n        var authorizeButton = document.getElementById('authorize_button');\n        var signoutButton = document.getElementById('signout_button');\n        if (isSignedIn) {\n          authorizeButton.style.display = 'none';\n          signoutButton.style.display = 'block';\n          this.listLabels();\n        } else {\n          authorizeButton.style.display = 'block';\n          signoutButton.style.display = 'none';\n        }\n      }\n\n\n    /**\n       *  Sign in the user upon button click.\n       */\n      handleAuthClick = (event) => {\n        window.gapi.auth2.getAuthInstance().signIn();\n        console.log(window.gapi);\n      }\n\n      /**\n       *  Sign out the user upon button click.\n       */\n      handleSignoutClick = (event) => {\n        window.gapi.auth2.getAuthInstance().signOut();\n      }\n\n      appendPre = (message) => {\n        // var pre = document.getElementById('content');\n        // var textContent = document.createTextNode(message + '\\n');\n        // pre.appendChild(textContent);\n      }\n      \n      \n      listLabels = () => {\n        let that = this;\n        window.gapi.client.gmail.users.labels.list({\n          'userId': 'me'\n        }).then(function(response) {\n          var labels = response.result.labels;\n          that.appendPre('Labels:');\n\n          if (labels && labels.length > 0) {\n            for (let i = 0; i < labels.length; i++) {\n              var label = labels[i];\n              that.appendPre(label.name)\n            }\n          } else {\n            that.appendPre('No Labels found.');\n          }\n        });\n      }\n\n\n    componentDidMount(){\n        //const gmail = new gmailAPI(this.state.API_KEY, this.state.CLIENT_ID);\n        window.gapi.load('client:auth2', this.initClient);\n        // gapi = window.gapi\n\n    }\n\n    selectAddress = (i) => {\n        let selAdd = this.state.emails[i];\n        let emails = []\n        let full = document.getElementsByClassName\n        let first = e.target.value.split(\" \")[0];\n        let last = e.target.value.split(\" \")[1];\n        let name = {first, last}\n        this.setState( { name } )\n        this.setState( { selAdd, emails } );\n    }\n\n    single(obj) {\n        let forced = {\n            first: \"chris\",\n            last: \"lee\",\n            domain: \"bauerxcel.com\"\n        }\n        fetch(\"http://localhost:4000/single\", { \n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',   \n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify(forced)\n        }).then(data => {\n            console.log(data);\n            return data.json()})\n        .then(emails => {\n            this.setState( { emails } )\n        })\n    \n    }\n\n\n    render(){\n\n        \n        return (\n            <div className=\"App\">\n\n                {/* <button id=\"authorize_button\" onClick={this.handleAuthClick} style={{display: 'none'}}>Authorize</button>\n                <button id=\"signout_button\" onClick={this.handleSignoutClick} style={{display: 'none'}}>Sign Out</button> */}\n                {this.state.selAdd ? <WritingEmail selAdd={this.state.selAdd} single={this.single} emails={this.state.emails} selectAddress={this.selectAddress} name={this.state.name} changeName={this.changeName}/> \n                : <Address single={this.single} emails={this.state.emails} selectAddress={this.selectAddress} selAdd={this.state.selAdd} changeName={this.changeName}/>}\n\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}