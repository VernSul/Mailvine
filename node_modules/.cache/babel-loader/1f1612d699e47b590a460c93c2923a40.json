{"ast":null,"code":"import _regeneratorRuntime from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/victor/Documents/dadTools/emailFinder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/victor/Documents/dadTools/emailFinder/src/Message.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport lodash from 'lodash';\n\nvar Message =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Message, _React$Component);\n\n  function Message(props) {\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n\n    _this.changeSubject = function (e) {\n      var s = _objectSpread({}, _this.state);\n\n      s.subject = e.target.value;\n\n      _this.setState(s);\n    };\n\n    _this.changeMessage = function (e) {\n      var text = e.target.value;\n\n      _this.setState({\n        text: text\n      });\n    };\n\n    _this.upFirst = function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    };\n\n    _this.placeAttribute = function (e) {\n      if (!_this.state.template) {\n        var textemp = _this.state.text.slice(0);\n\n        _this.setState({\n          template: textemp\n        });\n      }\n\n      var text = document.getElementById('emailEditor');\n\n      var first = _this.upFirst(_this.props.name.first);\n\n      var last = _this.upFirst(_this.props.name.last);\n\n      var company = _this.upFirst(_this.props.selAdd.split('@')[1].split('.')[0]);\n\n      var nwEl;\n\n      var nwText = _this.state.text.split(\"\");\n\n      var nwTemp = _this.state.template.split(\"\");\n\n      switch (e.target.value) {\n        case \"Full Name\":\n          nwEl = first + \" \" + last;\n          break;\n\n        case \"First Name\":\n          nwEl = first;\n          break;\n\n        case \"Last Name\":\n          nwEl = last;\n          break;\n\n        case \"Company\":\n          nwEl = company;\n          break;\n      }\n\n      if (text.selectionStart === text.selectionEnd) {\n        nwText.splice(text.selectionStart, 0, nwEl);\n        nwTemp.splice(text.selectionStart, 0, \"{\" + e.target.value + \"}\");\n      } else {\n        nwText.splice(text.selectionStart, text.selectionEnd - text.selectionStart, nwEl);\n        nwTemp.splice(text.selectionStart, text.selectionEnd - text.selectionStart, \"{\" + e.target.value + \"}\");\n      }\n\n      nwText = nwText.join(\"\");\n      nwTemp = nwTemp.join(\"\");\n\n      _this.setState({\n        text: nwText,\n        template: nwTemp\n      });\n    };\n\n    _this.sendMessage = function () {\n      var body = \"\";\n\n      for (var h in _this.state.headers) {\n        body += h += \": \" + _this.state.headers[h] + \"\\r\\n\";\n      }\n\n      body += \"\\r\\n\" + _this.state.text;\n      console.log(body);\n      var sendRequest = window.gapi.client.gmail.users.messages.send({\n        'userId': 'me',\n        'resource': {\n          'raw': window.btoa(body).replace(/\\+/g, '-').replace(/\\//g, '_')\n        }\n      });\n      return sendRequest.execute(function (a) {\n        console.log(a);\n      }, function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.saveTemplate =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var resp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post('http://localhost:4000/recordtemplate', {\n                name: document.getElementById(\"templateName\").value,\n                subject: _this.state.headers.subject,\n                text: _this.state.template\n              });\n\n            case 2:\n              resp = _context.sent;\n              console.log(resp);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.selectTemplate = function (e) {\n      if (e.target.value === 'Add template') return;\n      var template = lodash.find(_this.state.templates, function (x) {\n        return x._source.name === e.target.value;\n      });\n      template = template._source.text;\n      var text = template.split(\" \");\n\n      var first = _this.upFirst(_this.props.name.first);\n\n      var last = _this.upFirst(_this.props.name.last);\n\n      var company = _this.upFirst(_this.props.selAdd.split('@')[1].split('.')[0]);\n\n      for (var i = 0; i < text.length - 1; i++) {\n        if (text[i][0] === '{') {\n          var word = text[i].split(\"\");\n          word.pop();\n          console.log(word);\n          word.shift();\n          console.log(text[i]);\n          text[i] = text[i].join('');\n\n          switch (text[i]) {\n            case \"Full Name\":\n              text[i] = first + \" \" + last;\n              break;\n\n            case \"First Name\":\n              text[i] = first;\n              break;\n\n            case \"Last Name\":\n              text[i] = last;\n              break;\n\n            case \"Company\":\n              text[i] = company;\n              break;\n          }\n        }\n      }\n\n      text = text.join(\" \");\n\n      _this.setState({\n        template: template,\n        text: text\n      });\n    };\n\n    _this.state = {\n      headers: {\n        from: \"vicfaucon@gmail.com\",\n        to: \"victorfaucon@hotmail.fr\",\n        subject: \"Full Stack Engineer position at \"\n      },\n      text: \"\",\n      templates: [],\n      template: false\n    };\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var templates;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios('http://localhost:4000/gettemplate');\n\n              case 2:\n                templates = _context2.sent;\n                templates = templates.data.hits.hits;\n                this.setState({\n                  templates: templates\n                }, function () {\n                  console.log(_this2.state);\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var templates = this.state.templates.map(function (x, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: x._source.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, x._source.name);\n      });\n      return React.createElement(\"div\", {\n        className: \"Message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EmailForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"To\",\n        value: this.props.selAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Subject\",\n        onChange: this.changeSubject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        onClick: this.placeAttribute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Add attribute\"), React.createElement(\"option\", {\n        value: \"Full Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"option\", {\n        value: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"option\", {\n        value: \"Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"option\", {\n        value: \"Company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Company\")), React.createElement(\"select\", {\n        onClick: this.selectTemplate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Add template\"), templates), React.createElement(\"input\", {\n        id: \"templateName\",\n        placeholder: \"Name the new template\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        id: \"emailEditor\",\n        placeholder: \"Type your email\",\n        onChange: this.changeMessage,\n        onClick: this.getCursPos,\n        value: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Send\"), React.createElement(\"button\", {\n        onClick: this.saveTemplate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Save Template\")));\n    }\n  }]);\n\n  return Message;\n}(React.Component);\n\nexport default Message;","map":{"version":3,"sources":["/home/victor/Documents/dadTools/emailFinder/src/Message.js"],"names":["React","axios","lodash","Message","props","changeSubject","e","s","state","subject","target","value","setState","changeMessage","text","upFirst","word","charAt","toUpperCase","slice","placeAttribute","template","textemp","document","getElementById","first","name","last","company","selAdd","split","nwEl","nwText","nwTemp","selectionStart","selectionEnd","splice","join","sendMessage","body","h","headers","console","log","sendRequest","window","gapi","client","gmail","users","messages","send","btoa","replace","execute","a","error","saveTemplate","post","resp","selectTemplate","find","templates","x","_source","i","length","pop","shift","from","to","data","hits","map","getCursPos","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAMA,KAAN;;AADc,UAqBlBC,aArBkB,GAqBF,UAACC,CAAD,EAAO;AACnB,UAAIC,CAAC,qBAAQ,MAAKC,KAAb,CAAL;;AACAD,MAAAA,CAAC,CAACE,OAAF,GAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;;AACA,YAAKC,QAAL,CAAcL,CAAd;AACH,KAzBiB;;AAAA,UA2BlBM,aA3BkB,GA2BF,UAACP,CAAD,EAAO;AACnB,UAAIQ,IAAI,GAAGR,CAAC,CAACI,MAAF,CAASC,KAApB;;AACA,YAAKC,QAAL,CAAe;AAAEE,QAAAA,IAAI,EAAJA;AAAF,OAAf;AACH,KA9BiB;;AAAA,UAgClBC,OAhCkB,GAgCR,UAACC,IAAD,EAAU;AAChB,aAAOA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAtC;AAEH,KAnCiB;;AAAA,UAuClBC,cAvCkB,GAuCD,UAACd,CAAD,EAAO;AAEpB,UAAG,CAAC,MAAKE,KAAL,CAAWa,QAAf,EAAyB;AACrB,YAAIC,OAAO,GAAG,MAAKd,KAAL,CAAWM,IAAX,CAAgBK,KAAhB,CAAsB,CAAtB,CAAd;;AACA,cAAKP,QAAL,CAAe;AAACS,UAAAA,QAAQ,EAAEC;AAAX,SAAf;AACH;;AACD,UAAIR,IAAI,GAAGS,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAX;;AACA,UAAIC,KAAK,GAAG,MAAKV,OAAL,CAAa,MAAKX,KAAL,CAAWsB,IAAX,CAAgBD,KAA7B,CAAZ;;AACA,UAAIE,IAAI,GAAG,MAAKZ,OAAL,CAAa,MAAKX,KAAL,CAAWsB,IAAX,CAAgBC,IAA7B,CAAX;;AACA,UAAIC,OAAO,GAAG,MAAKb,OAAL,CAAa,MAAKX,KAAL,CAAWyB,MAAX,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,EAAgCA,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAAb,CAAd;;AAEA,UAAIC,IAAJ;;AACA,UAAIC,MAAM,GAAG,MAAKxB,KAAL,CAAWM,IAAX,CAAgBgB,KAAhB,CAAsB,EAAtB,CAAb;;AACA,UAAIG,MAAM,GAAG,MAAKzB,KAAL,CAAWa,QAAX,CAAoBS,KAApB,CAA0B,EAA1B,CAAb;;AAEA,cAAOxB,CAAC,CAACI,MAAF,CAASC,KAAhB;AACI,aAAK,WAAL;AACIoB,UAAAA,IAAI,GAAGN,KAAK,GAAG,GAAR,GAAcE,IAArB;AACA;;AACJ,aAAK,YAAL;AACII,UAAAA,IAAI,GAAGN,KAAP;AACA;;AACJ,aAAK,WAAL;AACIM,UAAAA,IAAI,GAAGJ,IAAP;AACA;;AACJ,aAAK,SAAL;AACII,UAAAA,IAAI,GAAGH,OAAP;AACA;AAZR;;AAcA,UAAGd,IAAI,CAACoB,cAAL,KAAwBpB,IAAI,CAACqB,YAAhC,EAA6C;AACzCH,QAAAA,MAAM,CAACI,MAAP,CAActB,IAAI,CAACoB,cAAnB,EAAmC,CAAnC,EAAsCH,IAAtC;AACAE,QAAAA,MAAM,CAACG,MAAP,CAActB,IAAI,CAACoB,cAAnB,EAAmC,CAAnC,EAAsC,MAAI5B,CAAC,CAACI,MAAF,CAASC,KAAb,GAAmB,GAAzD;AACH,OAHD,MAGO;AACHqB,QAAAA,MAAM,CAACI,MAAP,CAActB,IAAI,CAACoB,cAAnB,EAAmCpB,IAAI,CAACqB,YAAL,GAAoBrB,IAAI,CAACoB,cAA5D,EAA4EH,IAA5E;AACAE,QAAAA,MAAM,CAACG,MAAP,CAActB,IAAI,CAACoB,cAAnB,EAAmCpB,IAAI,CAACqB,YAAL,GAAoBrB,IAAI,CAACoB,cAA5D,EAA4E,MAAI5B,CAAC,CAACI,MAAF,CAASC,KAAb,GAAmB,GAA/F;AACH;;AAEDqB,MAAAA,MAAM,GAAGA,MAAM,CAACK,IAAP,CAAY,EAAZ,CAAT;AACAJ,MAAAA,MAAM,GAAGA,MAAM,CAACI,IAAP,CAAY,EAAZ,CAAT;;AAEA,YAAKzB,QAAL,CAAe;AAAEE,QAAAA,IAAI,EAAEkB,MAAR;AAAgBX,QAAAA,QAAQ,EAACY;AAAzB,OAAf;AAEH,KAjFiB;;AAAA,UAmFlBK,WAnFkB,GAmFJ,YAAM;AAChB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAI,IAAIC,CAAR,IAAa,MAAKhC,KAAL,CAAWiC,OAAxB,EAAgC;AAC5BF,QAAAA,IAAI,IAAIC,CAAC,IAAI,OAAO,MAAKhC,KAAL,CAAWiC,OAAX,CAAmBD,CAAnB,CAAP,GAA+B,MAA5C;AACH;;AACDD,MAAAA,IAAI,IAAI,SAAS,MAAK/B,KAAL,CAAWM,IAA5B;AAEA4B,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,UAAMK,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyBC,KAAzB,CAA+BC,QAA/B,CAAwCC,IAAxC,CAA6C;AAC7D,kBAAU,IADmD;AAE7D,oBAAY;AACR,iBAAON,MAAM,CAACO,IAAP,CAAYb,IAAZ,EAAkBc,OAAlB,CAA0B,KAA1B,EAAiC,GAAjC,EAAsCA,OAAtC,CAA8C,KAA9C,EAAqD,GAArD;AADC;AAFiD,OAA7C,CAApB;AAOA,aAAOT,WAAW,CAACU,OAAZ,CAAoB,UAACC,CAAD,EAAM;AAACb,QAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AAAe,OAA1C,EAA4C,UAACC,KAAD,EAAS;AAACd,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AAAmB,OAAzE,CAAP;AAEH,KArGiB;;AAAA,UAuGlBC,YAvGkB;AAAA;AAAA;AAAA;AAAA,6BAuGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMxD,KAAK,CAACyD,IAAN,CAAW,sCAAX,EAAmD;AAChEhC,gBAAAA,IAAI,EAAEH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCb,KADkB;AAEhEF,gBAAAA,OAAO,EAAE,MAAKD,KAAL,CAAWiC,OAAX,CAAmBhC,OAFoC;AAGhEK,gBAAAA,IAAI,EAAE,MAAKN,KAAL,CAAWa;AAH+C,eAAnD,CADN;;AAAA;AACPsC,cAAAA,IADO;AAMXjB,cAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvGG;;AAAA,UAgHlBC,cAhHkB,GAgHD,UAACtD,CAAD,EAAO;AACpB,UAAGA,CAAC,CAACI,MAAF,CAASC,KAAT,KAAmB,cAAtB,EAAsC;AACtC,UAAIU,QAAQ,GAAGnB,MAAM,CAAC2D,IAAP,CAAY,MAAKrD,KAAL,CAAWsD,SAAvB,EAAkC,UAASC,CAAT,EAAW;AAAC,eAAOA,CAAC,CAACC,OAAF,CAAUtC,IAAV,KAAmBpB,CAAC,CAACI,MAAF,CAASC,KAAnC;AAAyC,OAAvF,CAAf;AACAU,MAAAA,QAAQ,GAAGA,QAAQ,CAAC2C,OAAT,CAAiBlD,IAA5B;AACA,UAAIA,IAAI,GAAGO,QAAQ,CAACS,KAAT,CAAe,GAAf,CAAX;;AAEA,UAAIL,KAAK,GAAG,MAAKV,OAAL,CAAa,MAAKX,KAAL,CAAWsB,IAAX,CAAgBD,KAA7B,CAAZ;;AACA,UAAIE,IAAI,GAAG,MAAKZ,OAAL,CAAa,MAAKX,KAAL,CAAWsB,IAAX,CAAgBC,IAA7B,CAAX;;AACA,UAAIC,OAAO,GAAG,MAAKb,OAAL,CAAa,MAAKX,KAAL,CAAWyB,MAAX,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,EAAgCA,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAAb,CAAd;;AAEA,WAAI,IAAImC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGnD,IAAI,CAACoD,MAAL,GAAY,CAA/B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,YAAGnD,IAAI,CAACmD,CAAD,CAAJ,CAAQ,CAAR,MAAe,GAAlB,EAAsB;AAClB,cAAIjD,IAAI,GAAGF,IAAI,CAACmD,CAAD,CAAJ,CAAQnC,KAAR,CAAc,EAAd,CAAX;AACAd,UAAAA,IAAI,CAACmD,GAAL;AACAzB,UAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ;AACAA,UAAAA,IAAI,CAACoD,KAAL;AACA1B,UAAAA,OAAO,CAACC,GAAR,CAAY7B,IAAI,CAACmD,CAAD,CAAhB;AACAnD,UAAAA,IAAI,CAACmD,CAAD,CAAJ,GAAUnD,IAAI,CAACmD,CAAD,CAAJ,CAAQ5B,IAAR,CAAa,EAAb,CAAV;;AACA,kBAAOvB,IAAI,CAACmD,CAAD,CAAX;AACI,iBAAK,WAAL;AACInD,cAAAA,IAAI,CAACmD,CAAD,CAAJ,GAAUxC,KAAK,GAAG,GAAR,GAAcE,IAAxB;AACA;;AACJ,iBAAK,YAAL;AACIb,cAAAA,IAAI,CAACmD,CAAD,CAAJ,GAAUxC,KAAV;AACA;;AACJ,iBAAK,WAAL;AACIX,cAAAA,IAAI,CAACmD,CAAD,CAAJ,GAAUtC,IAAV;AACA;;AACJ,iBAAK,SAAL;AACIb,cAAAA,IAAI,CAACmD,CAAD,CAAJ,GAAUrC,OAAV;AACA;AAZR;AAeH;AACJ;;AAEDd,MAAAA,IAAI,GAAGA,IAAI,CAACuB,IAAL,CAAU,GAAV,CAAP;;AAEA,YAAKzB,QAAL,CAAe;AAACS,QAAAA,QAAQ,EAARA,QAAD;AAAWP,QAAAA,IAAI,EAAJA;AAAX,OAAf;AAEH,KAxJiB;;AAEd,UAAKN,KAAL,GAAa;AACTiC,MAAAA,OAAO,EAAE;AACL4B,QAAAA,IAAI,EAAC,qBADA;AAELC,QAAAA,EAAE,EAAC,yBAFE;AAGL7D,QAAAA,OAAO,EAAE;AAHJ,OADA;AAMTK,MAAAA,IAAI,EAAE,EANG;AAOTgD,MAAAA,SAAS,EAAE,EAPF;AAQTzC,MAAAA,QAAQ,EAAE;AARD,KAAb;AAFc;AAYjB;;;;;;;;;;;;;;;;uBAGyBpB,KAAK,CAAC,mCAAD,C;;;AAAvB6D,gBAAAA,S;AACJA,gBAAAA,SAAS,GAAGA,SAAS,CAACS,IAAV,CAAeC,IAAf,CAAoBA,IAAhC;AACA,qBAAK5D,QAAL,CAAe;AAAEkD,kBAAAA,SAAS,EAATA;AAAF,iBAAf,EAA8B,YAAI;AAACpB,kBAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACnC,KAAjB;AAAwB,iBAA3D;;;;;;;;;;;;;;;;;;6BA0II;AAEJ,UAAIsD,SAAS,GAAG,KAAKtD,KAAL,CAAWsD,SAAX,CAAqBW,GAArB,CAAyB,UAACV,CAAD,EAAIE,CAAJ,EAAU;AAC/C,eAAO;AAAQ,UAAA,GAAG,EAAEA,CAAb;AAAgB,UAAA,KAAK,EAAEF,CAAC,CAACC,OAAF,CAAUtC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwCqC,CAAC,CAACC,OAAF,CAAUtC,IAAlD,CAAP;AACH,OAFe,CAAhB;AAIA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,WAAW,EAAC,IAAnB;AAAwB,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,WAAW,EAAC,SAApB;AAA8B,QAAA,QAAQ,EAAE,KAAKxB,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAQ,QAAA,OAAO,EAAE,KAAKe,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAKI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,CAHJ,EAUI;AAAQ,QAAA,OAAO,EAAE,KAAKwC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEKE,SAFL,CAVJ,EAcI;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,WAAW,EAAC,uBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI;AAAW,QAAA,EAAE,EAAC,aAAd;AAA4B,QAAA,WAAW,EAAC,iBAAxC;AAA0D,QAAA,QAAQ,EAAE,KAAKjD,aAAzE;AAAwF,QAAA,OAAO,EAAE,KAAK6D,UAAtG;AAAkH,QAAA,KAAK,EAAE,KAAKlE,KAAL,CAAWM,IAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBI;AAAQ,QAAA,OAAO,EAAE,KAAKwB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,EAiBI;AAAQ,QAAA,OAAO,EAAE,KAAKmB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAjBJ,CADJ,CADJ;AAuBH;;;;EAzLiBzD,KAAK,CAAC2E,S;;AA4L5B,eAAexE,OAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport lodash from 'lodash';\n\nclass Message extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            headers: {\n                from:\"vicfaucon@gmail.com\",\n                to:\"victorfaucon@hotmail.fr\",\n                subject: \"Full Stack Engineer position at \"\n            },\n            text: \"\",\n            templates: [],\n            template: false\n        }\n    }\n\n    async componentWillMount(){\n        let templates = await axios('http://localhost:4000/gettemplate');\n        templates = templates.data.hits.hits;\n        this.setState( { templates }, ()=>{console.log(this.state)} );\n    }\n\n\n    changeSubject = (e) => {\n        let s = { ...this.state };\n        s.subject = e.target.value;\n        this.setState(s);\n    }\n\n    changeMessage = (e) => {\n        let text = e.target.value\n        this.setState( { text } );\n    }\n\n    upFirst = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n\n    }\n\n  \n\n    placeAttribute = (e) => {\n\n        if(!this.state.template) {\n            let textemp = this.state.text.slice(0)\n            this.setState( {template: textemp});\n        }\n        let text = document.getElementById('emailEditor');\n        let first = this.upFirst(this.props.name.first);\n        let last = this.upFirst(this.props.name.last);\n        let company = this.upFirst(this.props.selAdd.split('@')[1].split('.')[0]);\n        \n        let nwEl;\n        let nwText = this.state.text.split(\"\");\n        let nwTemp = this.state.template.split(\"\")\n\n        switch(e.target.value){\n            case \"Full Name\":\n                nwEl = first + \" \" + last;\n                break;\n            case \"First Name\":\n                nwEl = first;\n                break;\n            case \"Last Name\":\n                nwEl = last;\n                break;\n            case \"Company\":\n                nwEl = company;\n                break;\n        }\n        if(text.selectionStart === text.selectionEnd){\n            nwText.splice(text.selectionStart, 0, nwEl);\n            nwTemp.splice(text.selectionStart, 0, \"{\"+e.target.value+\"}\");\n        } else {\n            nwText.splice(text.selectionStart, text.selectionEnd - text.selectionStart, nwEl)\n            nwTemp.splice(text.selectionStart, text.selectionEnd - text.selectionStart, \"{\"+e.target.value+\"}\")\n        }\n\n        nwText = nwText.join(\"\")\n        nwTemp = nwTemp.join(\"\")\n        \n        this.setState( { text: nwText, template:nwTemp } );\n\n    }\n\n    sendMessage = () => {\n        let body = \"\"\n        for(let h in this.state.headers){\n            body += h += \": \" + this.state.headers[h] + \"\\r\\n\"\n        }\n        body += \"\\r\\n\" + this.state.text;\n\n        console.log(body)\n\n        const sendRequest = window.gapi.client.gmail.users.messages.send({\n            'userId': 'me',\n            'resource': {\n                'raw': window.btoa(body).replace(/\\+/g, '-').replace(/\\//g, '_')\n            }\n        })\n\n        return sendRequest.execute((a)=> {console.log(a)}, (error)=>{console.log(error)})\n\n    }\n\n    saveTemplate = async () => {\n        let resp = await axios.post('http://localhost:4000/recordtemplate', {\n            name: document.getElementById(\"templateName\").value,\n            subject: this.state.headers.subject,\n            text: this.state.template\n        })\n        console.log(resp);\n    }\n\n    selectTemplate = (e) => {\n        if(e.target.value === 'Add template') return;\n        let template = lodash.find(this.state.templates, function(x){return x._source.name === e.target.value});\n        template = template._source.text;\n        let text = template.split(\" \");\n\n        let first = this.upFirst(this.props.name.first);\n        let last = this.upFirst(this.props.name.last);\n        let company = this.upFirst(this.props.selAdd.split('@')[1].split('.')[0]);\n\n        for(let i = 0; i < text.length-1; i++){\n            if(text[i][0] === '{'){\n                let word = text[i].split(\"\");\n                word.pop();\n                console.log(word);\n                word.shift()\n                console.log(text[i]);\n                text[i] = text[i].join('');\n                switch(text[i]){\n                    case \"Full Name\":\n                        text[i] = first + \" \" + last;\n                        break;\n                    case \"First Name\":\n                        text[i] = first;\n                        break;\n                    case \"Last Name\":\n                        text[i] = last;\n                        break;\n                    case \"Company\":\n                        text[i] = company;\n                        break;\n                }\n                \n            }\n        }\n\n        text = text.join(\" \");\n\n        this.setState( {template, text})\n\n    }\n\n\n    render(){\n\n        let templates = this.state.templates.map((x, i) => {\n            return <option key={i} value={x._source.name}>{x._source.name}</option>\n        })\n\n        return(\n            <div className=\"Message\">\n                <div className=\"EmailForm\">\n                    <input placeholder=\"To\" value={this.props.selAdd}/>\n                    <input  placeholder=\"Subject\" onChange={this.changeSubject}/>\n                    <select onClick={this.placeAttribute}>\n                        <option>Add attribute</option>\n                        <option value=\"Full Name\">Full Name</option>\n                        <option value=\"First Name\">First Name</option>\n                        <option value=\"Last Name\">Last Name</option>\n                        <option value=\"Company\">Company</option>\n                    </select>\n                    <select onClick={this.selectTemplate}>\n                        <option>Add template</option>\n                        {templates}\n                    </select>\n                    <input id=\"templateName\" placeholder=\"Name the new template\"></input>\n                    <textarea  id=\"emailEditor\" placeholder=\"Type your email\" onChange={this.changeMessage} onClick={this.getCursPos} value={this.state.text}/>\n                    <button onClick={this.sendMessage}>Send</button>\n                    <button onClick={this.saveTemplate}>Save Template</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}